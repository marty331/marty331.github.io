{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to Pillar Consulting","text":""},{"location":"#about-us","title":"About Us","text":"<p>Pillar Consulting was founded in 2006 in Dallas, TX focusing on ERP implementations of PeopleSoft Financials. </p> <p>In 2013 we relocated our offices to Houston, TX where we remain today. As we progressed over the years we shifted our focus from supporting and implementing ERP systems to designing and building mobile and web applications. </p> <p>Around 2016 we primarily shifted our focus to creating web applications for enterprise and small businesses. </p> <p>Today, Marty works full time for a large technology company and this site remains up to house previous blog posts and new posts that Marty feels can be beneficial to himself and the technology community.</p> <p></p> <p>Founder: Marty Ballard</p> <p>Marty started Pillar after working for large consulting firms and dreaming of doing it better and faster for his customers. As an avid technology enthusiast, Marty is usually working on cutting edge technologies well before the masses know they exist.</p> <p>Check out Marty's work on Github.</p>"},{"location":"contact/","title":"Contact","text":"Network Username/URL Github Marty331 Linked In Marty Ballard Mastodon Headpunk"},{"location":"optout/","title":"Opt Out of Messaging","text":"<p>If you have been contacted by our messaging service and no longer wish to be please send an email to opt-out@pillar-soft.com.</p>"},{"location":"blogs/A_Beginners_Guide_to_TypeScript/","title":"A Beginner's guide to TypeScript","text":"A Beginner's Guide to TypeScript <p>TypeScript is a programming language that is a superset of JavaScript, meaning that it contains all the features of JavaScript but also adds some additional features. It was developed and is maintained by Microsoft, and is commonly used for building large-scale applications.</p> <p>One of the main benefits of using TypeScript is its static type checking, which allows for type errors to be caught during development rather than at runtime. This can save time and prevent potential bugs in the code.</p> <p>Another advantage of TypeScript is its support for object-oriented programming. This allows for the creation of classes, interfaces, and modules, which can help to organize and manage the codebase.</p> <p>To get started with TypeScript, you will need to first install the TypeScript compiler, which can be done through npm (the package manager for JavaScript). Once installed, you can create a TypeScript file by adding a \".ts\" extension to the file name.</p> <p>To compile a TypeScript file, you can use the command \"tsc filename.ts\" in the terminal. This will generate a JavaScript file with the same name, which can then be run in the browser or in a Node.js environment.</p> <p>One important thing to note is that TypeScript is a typed language, meaning that you must declare the type of each variable. This can be done by using the \": type\" syntax after the variable name, for example:</p> <pre><code>\nlet name: string = \"John\";\n</code></pre> <p>In addition to basic types such as string, number, and boolean, TypeScript also supports more advanced types such as enums, tuples, and arrays.</p> <p>Another key concept in TypeScript is interfaces, which allow you to define the shape of an object. This can be useful for defining the structure of an object that will be used in multiple places in the code.</p> <p>For example, you can define an interface for a person as follows:</p> <pre><code>\ninterface Person { name: string; age: number; address: string; }\n</code></pre> <p>You can then create an object that implements this interface, such as:</p> <pre><code>\nlet john: Person = { name: \"John\", age: 30, address: \"123 Main St\" };\n</code></pre> <p>In addition to interfaces, TypeScript also supports classes, which allow you to define the structure and behavior of objects. This can be useful for creating reusable components and implementing inheritance.</p> <p>For example, you can create a class for a person as follows:</p> <pre><code>\nclass Person { \n    name: string; \n    age: number; \n    address: string;\n\n     constructor(name: string, age: number, address: string) { \n         this.name = name; \n         this.age = age; \n         this.address = address; \n     }\n\n    getName() { \n        return this.name; \n    } \n}\n</code></pre> <p>You can then create an instance of this class and call its methods, such as:</p> <pre><code>\nlet john = new Person(\"John\", 30, \"123 Main St\"); \nconsole.log(john.getName()); // prints \"John\"\n</code></pre> <p>In conclusion, TypeScript is a powerful programming language that offers many benefits for building large-scale applications. With its static type checking and support for object-oriented programming, it can help to improve code quality and maintainability. By following the steps outlined in this beginner's guide, you can start using TypeScript in your own projects and take advantage of its features.</p> <p>Header Photo by CARYN MORGAN: https://www.pexels.com/photo/typewriter-keys-938165/</p>"},{"location":"blogs/Email_notifications_from_firebase/","title":"Email notifications from Firebase","text":"Email notifications from Firebase <p>So I built a pretty new website for my company using\u00a0Polymer\u00a0and it looks great. \u00a0I have a contact submission form that saves user\u2019s contact information in a\u00a0Firebase\u00a0database. \u00a0Firebase is great, it\u2019s easy to set up, easy to use (once you learn NoSQL), provide seamless syncing between your website, Android and iOS apps, they will host your site, provide SSL encryption, they provide a multitude of user sign in options, etc, etc. \u00a0I can\u2019t say enough great things about Firebase. \u00a0However, Firebase is not built to do data processing.</p> <p>So what\u2019s a programmer to do when all those new contacts come flooding in from your new hotness website? \u00a0How do you know that anyone has filled out your form and wants to do business with you? \u00a0Should you monitor your Firebase console obsessively day and night? (Guilty!) \u00a0There has to be a better, easier way right? \u00a0 Yes, there is!</p> <p>Python to the rescue! \u00a0Python is a great programming language, if you haven\u2019t picked it up yet then I highly suggest you give it a try.</p> <p>So I decided to write a Python script to monitor my Firebase backend and send me an email whenever someone new adds their contact information to my website. \u00a0After writing the script you\u2019ll also need to set up a way for the script to run on a recurrence.</p> <p> </p> <p></p> <p> </p> <p>There are several imports you\u2019ll need for this script, first off is\u00a0firebase-python, you can pip install this script \u2013 the instructions are in the link. \u00a0The remaining imports should already be available to you, so just set up your import section as so:</p> <pre>from firebase import Firebaseimport smtplibfrom email.MIMEMultipart import MIMEMultipartfrom email.MIMEText import MIMETextimport jsonimport logging</pre> <p>Next just connect up your Firebase instance to the script, pointing to your contacts node. \u00a0Set a reference to that Firebase instance \u2013</p> <pre>firebase = Firebase('https://&lt;YOURFIREBASEINSTANCE&gt;.firebaseio.com/contacts')contact_list = firebase.get()</pre> <p>The way I\u2019ve set up my script is I have two email accounts- The receiver account is the account I actually use on a day to day basis (I have a Google apps account for my business). The sender account is a dummy account that I made up for projects like this. Here\u2019s one thing to keep in mind, your sender account will need to be flagged as less secure. This will allow Python to log in as you and send email, here\u2019s the link to get that enabled.\u00a0lesssecureapps</p> <p>Here\u2019s where the fun starts! We will set up our SMTP server and get it started, define our email addresses, get signed into our sender account and and begin setting up the message to be sent.</p> <pre>server = smtplib.SMTP('smtp.gmail.com', 587)server.starttls()fromaddr = 'sender_account@gmail.com'toaddr = 'receiver_account@gmail.com'msg = MIMEMultipart()msg['From'] = fromaddrmsg['To'] = toaddrserver.login(fromaddr, 'sender_account_password')</pre> <p>Now we\u2019ll simply loop through the data and send ourselves an email if the contact has not been sent before. Also, we\u2019ll update the contact and mark it as sent so we don\u2019t keep sending the same contact information over and over. One thing that is very important \u2013 you want to UPDATE your Firebase data and not set it. If you set the data it will wipe out all the data you have with the current data, so that would leave you with only the current contact.</p> <pre>for cl in contact_list: contact_name = str(contact_list[cl]['name']) contact_phone = str(contact_list[cl]['phone']) contact_email = str(contact_list[cl]['email']) contact_message = str(contact_list[cl]['message']) contact_type = str(contact_list[cl]['type']) contact_pref = str(contact_list[cl]['contact']) try: contact_view = str(contact_list[cl]['viewed']) except Exception, e: contact_view = 'Y' logging.info(e) if contact_view == 'N': body = 'You have a new contact:&lt;b&gt; ' + contact_name + '&lt;/b&gt; who would like to be contacted via ' + contact_pref + ' email address is: ' + contact_email + ' and phone is: ' + contact_phone + '. &lt;br&gt;&lt;br&gt;The contact type is '+ contact_type + ' and the message is &lt;br&gt;' + contact_message msg['Subject'] = 'New Contact: '+contact_name msg.attach(MIMEText(body, 'HTML')) text = msg.as_string() server.sendmail(fromaddr, toaddr, text) contact_list[cl]['viewed']='Y' firebase.update(contact_list)</pre> <p>With that the email has been sent and the contact has been updated as viewed. One bit of house keeping and the script is done.</p> <p>server.quit()</p> <p>So the script is complete and you can test it via command line or IDE, depending on your setup. Assuming all your login information was correct and you didn\u2019t encounter any errors (or resolved any that cropped up), now it\u2019s time to focus on script execution. The script works great but the purpose of it is to notify you when someone registers on your site. You have a couple of options for this \u2013 1. Spin up a Google App Engine instance and have it run as a cron job, 2. Have it run as a cron job on your own server, 3. Others? (feel free to leave comments.) I choose to run this on my own server and I have the perfect server for this job \u2013 a Raspberry Pi Model A. It\u2019s perfect for this job because it is low energy, maintained by me and I have complete control over it.</p> <p>I already have said Raspberry Pi set up running Rasbian (it\u2019s tucked away in a spare bedroom) so I will just do a secure copy to push the file to the Raspberry Pi \u2013</p> <p>scp contact_script.py pi@ip_address_raspberry_pi:/home/pi</p> <p>You\u2019ll need to enter your password to giver permission to copy the file onto the raspberry pi. \u00a0Now we\u2019ll ssh into the Raspberry Pi \u2013</p> <p>ssh@ip_address_raspberry_pi</p> <p>Again enter your password for the Raspberry Pi. \u00a0At this point you should be at the command prompt in your home directory. \u00a0So let\u2019s make sure our file was copied over successfully. \u00a0Enter the list command and verify that your script is there.</p> <pre>ls10_account.rc dead.letter python_games10_account.rc~ Desktop share20_frontends.rc contact_script.py80_httpd.rc80_httpd.rc.sample</pre> <p>Now you need to make the script executable \u2013</p> <p>chmod +x contact_script.py</p> <p>Now the final step is to add the script to your crontab so it can be ran periodically. How often should you run it? That\u2019s up to you, but I choose to have mine executed every 5 minutes. So I someone enters there contact information on my site then I will get a notification within 5 minutes and can email or call them back. So let\u2019s edit your crontab and enter in the script information \u2013</p> <pre>crontab -e# Edit this file to introduce tasks to be run by cron.# Each task to run has to be defined through a single line# indicating with different fields when the task will be run# and what command to run for the task## To define the time you can provide concrete values for# minute (m), hour (h), day of month (dom), month (mon),# and day of week (dow) or use '*' in these fields (for 'any').## Notice that tasks will be started based on the cron's system# daemon's notion of time and timezones.## Output of the crontab jobs (including errors) is sent through# email to the user the crontab file belongs to (unless redirected).## For example, you can run a backup of all your user accounts# at 5 a.m every week with:# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/## For more information see the manual pages of crontab(5) and cron(8)## m h dom mon dow command*/5 * * * * python /home/pi/contact_script.py</pre> <p>The last line is where the magic happens \u2013 let\u2019s take it step by step.</p> <p>Cron reads your entries like this:MinuteHourDay of MonthMonthDay of WeekCommand</p> <p>So we entered:Minute \u2013 \u201c*/5\u201d and Cron reads this as \u2018Every 5 minutes\u2019Hour \u2013 \u201c*\u201d and Cron reads this as \u2018Any Hour\u2019Day of Month \u2013 \u201c*\u201d and Cron reads this as \u2018Any Day of the Month\u2019Month \u2013 \u201c*\u201d and Cron reads this as \u2018Any Month\u2019Day of Week \u2013 \u201c*\u201d and Cron reads this as \u2018Any Day of the Week\u2019Command \u2013 \u201cpython /home/pi/contact_script.py\u201d and Cron reads this as \u2018Execute the contact_script.py in the pi home folder using the system enabled version of Python\u2019</p> <p>Click Ctrl + X and save the crontab file. Now the script will be executed every 5 minutes and you\u2019ll receive an email whenever someone new signs up for your website. To test it out go enter a new contact in your website and sit and wait for the email.</p> <p>Thanks for reading, it took much longer to write this up than it did to write the actual script! Leave comments and let me know if you liked this and want to see more posts like this one.</p>"},{"location":"blogs/Firebase_Auth_Android/","title":"Firebase Authentication - Simple signin with email and password for Android","text":"Firebase Authentication \u2013 Simple Signin with Email and Password for Android Email and Password \u2013 The Simple Log In <p>One of the most useful features in Firebase Authentication is the ability create a secure user account with the user\u2019s own email and password. \u00a0Utilizing Firebase\u2019s secure methods is very simple and powerful and available cross platform. \u00a0Follow along in this article to learn how to tackle simple sign in for Firebase Authentication based on a user\u2019s email and password in Android. To learn how to setup simple sign in for iOS please read my article\u00a0Firebase Authentication \u2013 Simple Signin With Email and Password for iOS\u00a0on Swift\u00a0and please look for Web version to be posted very soon.</p> <p>I admittedly believe The Setup section is a bit dry, but if you can make it through till the Manage section I believe you\u2019ll be a bit more entertained.</p> The Setup\u00a0 <p>No matter which platform you are developing on, you will need to do a little bit of setup before you get started with email and password sign in. This won\u2019t hurt a bit, so we\u2019ll take a look at the setup now for Android.</p> Android\u00a0 <p>1. First, you will need to create a Firebase project in the\u00a0Firebase Console\u00a0or import an existing project into the Firebase Console. 2. Click on Add Firebase to Your Android app and follow the setup steps, you\u2019ll need your project\u2019s package name and your SHA-1 (the SHA-1 says that it is optional but you need this for a fully functioning app). 3. Download the google-services.json file and save this in the /app folder of your Android app. 4. Update your root level build.gradle file to include the google-services plugin \u2013</p> <pre> buildscript { dependencies { classpath 'com.google.gms:google-services:3.0.0' } }</pre> <p> </p> <p>5. Update your module gradle file to add dependencies for Firebase and Firebase Auth \u2013</p> <pre> dependences { compile 'com.google.firebase:firebase-core:9.6.1' compile 'com.google.firebase:firebase-auth:9.6.1' } //ADD THIS TO THE BOTTOM apply plugin: 'com.google.gms.google-services'</pre> <p>6. Go back to the Firebase Console and enable the Email/password sign-in method. Do this by navigating to the Auth section in the console, then click the Sign in method tab, enable the Email/password sign-in method and click Save.</p> Create a User\u2019s Account <p>Now that we\u2019re all setup we can get started. The first thing to do is create a user\u2019s account in our app, you will be amazed at how simple this actually is to accomplish.</p> <p>In our class we\u2019ll get a shared instance of the FirebaseAuth object and the AuthStateListener. \u00a0In the onCreate() method call FirebaseAuth.getObject()\u00a0and set up the\u00a0AuthStateListener. \u00a0The AuthStateListener\u2019s job is to respond to changes in the user\u2019s sign in state, so as a user signs in or out our AuthStateListener listens to this and provides information on the sign in state. \u00a0You\u2019ll notice we create a user with FirebaseUser and calling firebaseAuth.getCurrentUser(), if that user is not null then the user is signed in, otherwise the user is signed out.</p> <p>Now we\u2019ll start and stop the AuthStateListener by adding or removing in our onStart() and onStop() methods. \u00a0onStart() is called when the Class is started and we will add the AuthStateListener so it can begin doing it\u2019s job listening for changes in our user\u2019s AuthState. \u00a0onStop() is called when our Class is stopping and we will test to see if our AuthStateListener is already null and if it is not then we will remove our AuthStateListener before the Class is fully stopped.</p> <p>The Firebase documentation recommends doing validation steps prior to creating your user\u2019s account and I fully support this. \u00a0At this point the items you can validate are simply email address and password by having the user type them in a second time and validating that the entries match, I\u2019ll leave that up to you as the developer to come up with that complete strategy.</p> <pre> private FirebaseAuth mAuth; private FirebaseAuth.AuthStateListener mAuthListener; @Override protected void onCreate(Bundle savedInstanceState) { super.onCreate(savedInstanceState); mAuth = FirebaseAuth.getInstance(); mAuthListener = new FirebaseAuth.AuthStateListener() { @Override public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) { FirebaseUser user = firebaseAuth.getCurrentUser(); if (user != null) { // User is signed in } else { // User is signed out Log.d(LOG_TAG, \"onAuthStateChanged:signed_out\"); } } }; } @Override public void onStart() { super.onStart(); mAuth.addAuthStateListener(mAuthListener); } @Override public void onStop() { super.onStop(); if (mAuthListener != null) { mAuth.removeAuthStateListener(mAuthListener); } }</pre> <p>At this point we are finally ready to create the user\u2019s account, to accomplish this we will call FirebaseAuth.createUserWithEmailAndPassword(), we\u2019ll create a method for this process that you may call with a button click or in any other manner that you choose. \u00a0Most likely you have had your user enter their email and password into an EditText widget and the createUserWithEmailAndPassword requires string values for the email and password so you must convert those values to a String for the method to work correctly.</p> <pre> ... email = emailWidget.getText().toString(); password = passwordWidget.getText().toString(); .... private void createUserAccount(email String, password String){ Log.d(LOG_TAG, \"email: \"+getEmail+\" password: \"+getPassword); mAuth.createUserWithEmailAndPassword(getEmail, getPassword) .addOnCompleteListener(this, new OnCompleteListener&lt;AuthResult&gt;() { @Override public void onComplete(@NonNull Task&lt;AuthResult&gt; task) { // If account creation fails, log the exception and notifiy the user. // If account creation is successful then the authStateListener will be // notified and the signed in user information is handled by // the listener. if (!task.isSuccessful()) { Log.w(LOG_TAG, \"signInWithEmail:failed\", task.getException()); Log.w(LOG_TAG, \"email: \"+email.toString()+\" password: \"+password.toString()); Toast.makeText(MainActivity.this, R.string.create_account_fail+task.getException(), Toast.LENGTH_LONG).show(); } } }); };</pre> Sign In with an email and password <p>Now that our user\u2019s account has been created we\u2019ll need to have them sign into their account. \u00a0Below I\u2019ve created a method called signInWithEmail() which requires email and password as string values, again. \u00a0In the method we call FirebaseAuth.signInWithEmailAndPassword and pass the email and password strings and addOnCompleteListener which creates and OnCompleteListener that listens for the AuthResult. \u00a0Then we override the onComplete and require a non-null Task with the AuthResult and if the task.isSuccessful() returns true the user is signed in with their own email.</p> <pre> ... email = emailWidget.getText().toString(); password = passwordWidget.getText().toString(); ... private void signInWithEmail(email String, password String){ mAuth.signInWithEmailAndPassword(email, password) .addOnCompleteListener(this, new OnCompleteListener&lt;AuthResult&gt;() { @Override public void onComplete(@NonNull Task&lt;AuthResult&gt; task) { Log.d(LOG_TAG, \"signInWithEmail:onComplete:\" + task.isSuccessful()); // If sign in fails, display a message to the user. If sign in succeeds // the auth state listener will be notified and logic to handle the // signed in user can be handled in the listener. if (!task.isSuccessful()) { Log.w(LOG_TAG, \"signInWithEmail:failed\", task.getException()); Log.w(LOG_TAG, \"email: \"+email.toString()+\" password: \"+password.toString()); Toast.makeText(MainActivity.this, R.string.auth_failed, Toast.LENGTH_LONG).show(); } } }); };</pre> Manage Users <p>After you have created a user with email and password and then successfully signed the user into your app, you can perform many actions with their user information. \u00a0You can get the current user, get the user\u2019s profile information (which may include a photo, email address or name), update the user\u2019s profile information, reset passwords, etc. \u00a0As we continue we\u2019ll discuss how to perform each of these and other tasks, and we\u2019ll be doing this with our boy Bob. \u00a0Bob is a recent college grad who\u2019s finally landed a job and is trying to clean up his act a bit from his hard partying days at college.</p> Get Currently Signed In User <p>We\u2019ll start by getting Bob\u2019s user ID, \u00a0the currently signed in user, and we\u2019ll build from there. \u00a0We create a FirebaseUser and get FirebaseAuth.getInstance().getcurrentUser(), if the FirebaseUser is not null then we can get the user id with .getUid().</p> <pre> FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); if (user != null) { String currentUser = user.getUid(); }</pre> Get User\u2019s Profile Information <p>After we have the a valid FirebaseUser we an dig deeper and get additional data elements such as photo, email and name. \u00a0Assume we were able to getCurrentUser() successfully we can simply request to get the user name (getDisplayName()), user\u2019s email (getEmail()), and get user\u2019s photo url (getPhotoUrl()).</p> <pre> String userName = user.getDisplayName(); String userEmail = user.getEmail(); Uri userPhotoUrl = user.getPhotoUrl();</pre> Update a User\u2019s Profile Information <p>We are able to make some simple changes to Bob\u2019s profile, we can change the Bob\u2019s display name and his photo url. \u00a0To accomplish this we\u2019ll use the static class\u00a0UserProfileChangeRequest.Builder() which allows us to setDisplayName(String) and setPhotoUri(Uri) and then call .build(). \u00a0We\u2019ll call the FirebaseUser.updateProfile() and pass in the UserProfileChangeRequest that we created.</p> <pre> FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder() .setDisplayName(\"Bob Smith\") .setPhotoUri(Uri.parse(\"https://mysocialmedia.com/user/bob_in_a_suit_not_drunk.jpg\")) .build(); user.updateProfile(profileUpdates) .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { if (task.isSuccessful()) { Log.d(LOG_TAG, \"User profile successfully updated.\"); } } });</pre> Change a User\u2019s Email Address <p>So your user has registered with their favorite email address they have deceided that superSeXy18@yahoo.com is not very professional (no idea if that\u2019s a real email address) and they want to update their email address to something more corporate like bob_smith_cpa@gmail.com, well fortunately with Firebase this is pretty easy to accomplish. \u00a0If the user\u2019s credential is too old you may be required to re-authenticate, make sure you read the Re-Authenticate a User section below.</p> <pre> FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); user.updateEmail(\"bob_smith_cpa@gmail.com\") .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { if (task.isSuccessful()) { Log.d(TAG, \"User email address updated to:\"+user.getEmail()); } } });</pre> Send a User an Email to Reset Their Password <p>So now Bob Smith looks professional to all his new buddies at E-Corp, but he forgot his password (probably too busy trying to find a way to convert the masses to E-Coin). \u00a0Fortunately you can help him out (don\u2019t expect the favor to be returned) and send him an email to reset his password.</p> <p>To send Bob his password email you will need to get an instance of the FirebaseAuth (don\u2019t you have this already?) and then get the email address that the account is registered to, I would have Bob enter this via an EditText field. \u00a0Once you have the string version of Bob\u2019s email then you will call FirebaseAuth.sendPasswordResetEmail(emailAddress) as shown below. \u00a0If everything is successful then Bob should get an email allowing him to reset his password. \u00a0Keep in mind that you can customize the email that is sent to your user\u2019s by visiting the\u00a0Firebase Console\u00a0on the Email Templates page.</p> <pre> FirebaseAuth auth = FirebaseAuth.getInstance(); String emailAddress = \"bob_smith_cpa@gmail.com\"; auth.sendPasswordResetEmail(emailAddress) .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { if (task.isSuccessful()) { Log.d(TAG, \"Password Reset Email sent.\"); } } });</pre> Update a User\u2019s Password <p>Since Bob is too busy to check his email and probably only uses Slack (#zeroinbox), we can allow him to update his password right in the app. \u00a0Allow Bob to enter a new password (security verification is left up to you and I encourage you to set a minimum length, special characters, upper and lower case rules) as a String.\u00a0 Most likely you\u2019ll do this via an EditText so don\u2019t forget to get the string value. \u00a0Call FirebaseUser.updatePassword() and pass in the string value for the new password. \u00a0If you allow Bob to set a password that is less than 6 characters you can expect to get a\u00a0FirebaseAuthWeakPasswordException\u00a0and no one wants that. \u00a0If the user\u2019s credential is too old you may be required to re-authenticate, make sure you read the Re-Authenticate a User section below.</p> <pre> String newPassword = \"eXpl0!t_Dn1eD!\"; user.updatePassword(newPassword) .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { if (task.isSuccessful()) { Log.d(LOG_TAG, \"User password updated.\"); } } });</pre> Delete a User\u2019s Account <p>The time may come when Bob is too swamped at E-Corp to keep using your app as it\u2019s distracting him from his climp up the evil ladder and Bob just wants to delete his account. \u00a0Never fear Bob, we can\u2019s save you from selling your soul but we can delete your account from our awesome app. \u00a0As long as you have a reference to the FirebaseUser you can call FirebaseUser.delete() and Bob\u2019s account is no more. \u00a0Simple. \u00a0If the user\u2019s credential is too old you may be required to re-authenticate, make sure you read the Re-Authenticate a User section below.</p> <pre> FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); user.delete() .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { if (task.isSuccessful()) { Log.d(LOG_TAG, \"Adios Bob\"); } } });</pre> Re-Authenticate a User <p>If it\u2019s been some time since Bob signed in (forget that whole account deletion section above, Bob couldn\u2019t go through with deleting his account) you may need to re-authenticate a user for several of the actions above \u2013 Delete a User\u2019s Account, Updating a User\u2019s Password, Change a User\u2019s Email Address. \u00a0If you try one of these actions and receive a\u00a0FirebaseAuthRecentLoginRequiredException\u00a0error then you will need to Re-Authenticate your user and get new signin credentials. \u00a0To do this you will basically have the user sign in to their app but this time you\u2019ll use a different method. \u00a0Get a new instance of FirebaseUser. \u00a0Create a new AuthCredential and set it equal to EmailAuthProvider.getCredential(email, password), you\u2019ll need to pass in email and password as String values. \u00a0Next call FirebaseAuth.reauthenticate() and pass in the AuthCredential, if successful the user is reauthenticaed and you can retry the original action. \u00a0If you receive an error then you may listen for that and deal with it as appropriate.</p> <p> </p> <pre> FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser(); AuthCredential credential = EmailAuthProvider .getCredential(\"bob_smith_cpa@gmail.com\", \"reallyHardPassword\"); user.reauthenticate(credential) .addOnCompleteListener(new OnCompleteListener&lt;Void&gt;() { @Override public void onComplete(@NonNull Task&lt;Void&gt; task) { Log.d(TAG, \"User re-authenticated.\"); } });</pre> Sign a User Out <p>Now after all that work don\u2019t forget to give Bob a way to sign out of your app, after all he\u2019s got work to do!</p> <pre> FirebaseAuth.getInstance().signOut();</pre> <p>That\u2019s all folks! \u00a0Thanks for reading this to the end, I hope it wasn\u2019t too boring for you. \u00a0The\u00a0Firebase Docs\u00a0have everything you\u2019ve read here documented, but without my amazing commentary, they are excellent and I encourage you to check them out.</p> <p>As I mentioned in the beginning I\u2019ll be posting an article detailing these same actions for iOS and the web soon. \u00a0Please check back for those and if you enjoyed this please share it on social media. \u00a0If you have found any errors or ommisions please leave me feedback so I can get it corrected as soon as possible!</p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"blogs/Google_photos_how_to_backup/","title":"Google Photos - How to backup from Android and manage online","text":"Google Photos \u2013 How to backup from Android and manage Online <p>Google Photos offers users incredible storage options for all your precious photos so \u00a0you never have to worry about losing them again. \u00a0But how do you get set up so your photos are backed up? \u00a0And once \u00a0you have them backed up, how do you access them? \u00a0Well fear not, because Pillar Consulting is here to help you along.</p> <p>Let\u2019s start out by looking at the options that Google giveth us \u2013 We have High Quality and Original, below are the details on what each of those mean.</p> High quality <ul> <li>Unlimited free storage.</li> <li>Regular cameras: Recommended for phones or point-and-shoot cameras that are 16 megapixels (MP) or less.</li> <li>Uses: Good for typical printing and sharing.</li> <li>Size: Saves high-quality photos and videos while reducing size.</li> </ul> Original <ul> <li>Limited free storage: Uses storage in your Google Account, regardless of photo or video size.</li> <li>DSLR cameras: Recommended if you take photos with a DSLR camera and want to maintain the exact original quality.</li> <li>Uses: Recommended for printing large banners or to store original files.</li> <li>Size: Stores your photos and videos exactly as you captured them.</li> </ul> <p>If you\u2019re like most people High quality storage is all you need and it\u2019s completely free, you can literally store a million pictures if you want to take that many and it won\u2019t cost you a cent. \u00a0I can hear the alarm bells going off in some of your heads already, \u2018There\u2019s nothing free in life!\u2019 and that\u2019s probably true, by storing your photos Google has the right to scan them so their Artificial Intelligence algorithms can get better over time at recognizing what is in each image. \u00a0That\u2019s it, Google isn\u2019t going to sell your pictures or do anything nefarious with them.</p> <p>Android Backup</p> <p>On your Android phone, find the Google Photos app and open it up. \u00a0Click the\u00a0hamburger menu in the top left, then scroll down to the bottom and click Settings. \u00a0You should now see a page similar to this:</p> <p></p> <p> </p> <p>Click the \u2018Back up &amp; sync\u2019 button and you\u2019ll be taken to the backup and sync page, which looks like this:</p> <p></p> <p> </p> <p>There are several actions to take here \u2013 first make sure the gear is on (highlighted blue) for Back up &amp; Sync, after that then click the Upload Size button to chose the type of upload you want, remember Original quality will use your storage space and could end up costing you money to back up but High quality is totally free.</p> <p></p> <p>After you\u2019ve made that decision then click the Back up device folders button and choose which folders you want to auto-backup. \u00a0The folders you have available will differ depending on what apps you have installed on your device but it will look similar to this:</p> <p></p> <p>From time to time I choose to not back up folders and only sync individual pictures or may choose to sync a folder, to accomplish this you will again click the\u00a0hamburger menu and this time choose Device Folders. \u00a0From here you can choose to backup an individual picture or sync an entire folder, just click the upload button like so-</p> <p></p> <p> </p> <p>With that we have our Android device all set to sync your photos to Google Photos, now we\u2019ll go take a look at those photos in the cloud and see how we can view and retrieve them at a later time.</p> <p>On your web browser (this works best on a computer and I reccomend using Google Chrome as the browser), navigate to\u00a0https://photos.google.com\u00a0 If you\u2019re not already signed in to your Google account you\u2019ll be prompted to do so at this time. \u00a0Once you\u2019ve signed in you\u2019ll be greeted with all the photos that you have backed up to your cloud, in reverse chronological order so you\u2019ll see your most recent pictures first.</p> <p></p> <p> </p> <p>Here\u2019s where things get really awesome, remember how I mentioned that Google would scan your pictures so their Artificial Intelligence gets better? \u00a0So guess who gets to take advantage of that? \u00a0 That\u2019s right,\u00a0you\u00a0do! \u00a0Notice the Search box above your photos, go ahead and search your images for anything you might have. \u00a0I\u2019ll search for \u2018dogs\u2019 and lets see what Google brings back \u2013</p> <p></p> <p>Of all the pictures that are immediately displayed only three\u00a0of them don\u2019t actually have dogs and of those two are of my son on a skating rink floor\u00a0and a third is my daughter in a cat costume. \u00a0Notice that dogs are displayed in all the other pictures \u2013 real dogs, fake dogs, kids in dog costumes, big dogs, little dogs. \u00a0If I were to search for trees I would have similar results. \u00a0I could also search for a day, a person, an event, etc. \u00a0This AI is really amazing and only gets better as time goes on and more photos are scanned. \u00a0To view any of the photos in full screen, simply click on the photo (you probably already found that option).</p> <p> </p> <p>Download Photos</p> <p>The last item to cover is to download your photos to your computer or phone. \u00a0This is easily done simply select one or more pictures by hovering over the picture until you see the checkmark appear at the top left of the photo, you\u2019ll click the checkmark and it will turn blue.</p> <p>Do this with as many photos as you like and then click the\u00a0overflow button in the top right of the screen, this will bring up the overflow menu and you can select to download the photo.</p> <p></p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p>"},{"location":"blogs/How%20To%20Test%20JavaScript%20Functions%20in%20VSCode/","title":"How To Test JavaScript Functions in VSCode","text":"How To Test JavaScript Functions in VSCode <p> How to Test JavaScript Functions in VSCode ==========================================</p> <p>So oftentimes I'll find myself writing a function for React or Angular and I just want a really quick way to test this function without firing up the app.\u00a0 Here's a really quck and simple way to do just that.</p> <p>Create a directory for JavaScript functions, and then a new file for your function.\u00a0 Copy your function into that new file and then you can simply test it by running it with Node inside VSCode.\u00a0 You may need to create data to be processed as well, in my case I created an array of objects called data.</p> <p>After you have the file created, open a terminal right in VSCode from the top menu - Terminal &gt; New Terminal.\u00a0 Then you simply run the file using node as such -</p> <pre><code>\nnode &lt;filename&gt;\n\n// example\nnode array.js\n</code></pre> <p>Here's a quick video below to show you how it looks.   I hope this saves you a bit of time.</p>"},{"location":"blogs/How%20to%20Install%20Docker%20CE%20on%20RHEL%208%20Behind%20Corporate%20Firewall/","title":"How to Install Docker CE on RHEL 8 Behind Corporate Firewall","text":"How to Install Docker CE on RHEL 8 Behind Corporate Firewall <p> So I've been assigned a task at my current client, they want me to build out a CI/CD pipeline using some new on prem servers they have purchased.\u00a0 The good thing is they are Linux, but the not so good thing is they are RedHat.\u00a0 RedHat isn't bad by any means, but I'm much more familar with Debian.\u00a0 So it's been a bit of a learning curve.</p> <p>Today I'm going to document how to setup Docker CE on a RHEL 8 server behind a corporate firewall and using a proxy.\u00a0 The corporate firewall can really throw a wrench in setting up anything, fortunately they also have a proxy.\u00a0 The way I'm setting this up reqires root, so if you don't have root you may need to adjust the commands below.\u00a0 I've made this pretty easy if you just follow along it can be done in a few minutes.</p> <pre><code>\nInstall Docker\n- Add proxy to /etc/dnf/dnf.conf - `proxy=http://&lt;proxy-url&gt;:&lt;proxy-port&gt;`\n- Enable Docker CE Repository - `dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo`\n- Verify Repository availability and install - `dnf list docker-ce`\n- Install Docker CD using dnf Command - `dnf install docker-ce --nobest -y`\n- Start Docker - `systemctl start docker`\n- Enable Docker - `systemctl enable docker`\n- Validatate Docker is running - `docker --version`\n\nSet Docker Proxy\n- Create drop-in - `mkdir /etc/systemd/system/docker.service.d`\n- Create http-proxy.conf `touch /etc/systemd/system/docker.service.d/http-proxy.conf`\n- Populate Proxy data - `[Service]\nEnvironment=\"HTTPS_PROXY=http://&lt;proxy-url&gt;:&lt;proxy-port&gt;\"\nEnvironment=\"HTTP_PROXY=http://&lt;proxy-url&gt;:&lt;proxy-port&gt;\"`\n- Reload systemd daemon - `systemctl daemon-reload`\n- Restart docker - `systemctl restart docker`\n- Verify config has been loaded `systemctl show docker --property Environment`\n- Test Docker - `docker run hello-world`\n\n</code></pre> <p>At this piont you should have docker running on the server!\u00a0 \ud83c\udf89\u00a0 There is one more thing that I needed to do as I use docker-compose and this was not available.\u00a0 Follow the remaining steps to install docker-compose and then you can really use docker.</p> <pre><code>\nInstall Docker-Compose\ncurl -x http://&lt;proxy-url&gt;:&lt;proxy-port&gt; -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\n</code></pre> <p>And with that docker-compose is setup.</p> <p>You should now have docker and docker-compose fully setup and ready to go.</p> <p>Make sure to follow LearningToFly for more tips and tricks.</p> <p>Header image - Photo by Julius Silver from Pexels</p>"},{"location":"blogs/How%20to%20Search%20an%20Array%20of%20Objects%20in%20JavaScript%20%28React%29/","title":"How to Search an Array of Objects in JavaScript (React)","text":"How to Search an Array of Objects in JavaScript (React) <p>  =======================================================</p> <p>Before we dive in, I wanted to let you know that I'm writing this post for me, for future me.\u00a0 I was tasked with creating the search functionality, for a client, and they wanted to be able to search across multiple tabs and categories and have the resutls update in real time.\u00a0 I spent a lot of time figuring this out where everything worked across tabs and categories but what I'm presenting here is the meat of the functionality.\u00a0 If you've stumbled on to this post, I hope it saves you some time.</p>"},{"location":"blogs/How%20to%20Search%20an%20Array%20of%20Objects%20in%20JavaScript%20%28React%29/#the-search-function","title":"The Search Function","text":"<p>The search function is just a pure JavaScript function, there's no speacial React sauce.\u00a0 There are two parameters that are required, the array that you'll be searching through and the keyword that the user wants to search for.</p> <p>The first step is to convert the keyword to lowercase, this is done to make matching work as we'll be doing the same for the values that we search through as well.</p> <p>The next step is to use the filter function on the array.\u00a0 The filter function in JavaScript returns an array of all matching elements.\u00a0 The filter function will loop through each element in the array and then test to see if it is true and if so it will be added to the results.</p> <p>The last step is the run the test on each value in the object and determine if there is a match.\u00a0 To this we convert the string (it must be a string) to lower case and then run the match function.\u00a0 The match function takes a regular expression and returns an array of all the matches, this is done by added the 'g' flag.\u00a0\u00a0</p> <p>One futher thing to note is there are three tests below and they are each seperated with the OR operator, therefore if any of the tests are true then the function will return true and the object will be added to the new filter array.\u00a0 You may easily add additional key values to test for using this method.</p> <pre><code>\nexport const arraySearch = (array, keyword) =&gt; {\n    const searchTerm = keyword.toLowerCase()\n    return array.filter(value =&gt; {\n        return value.name.toLowerCase().match(new RegExp(searchTerm, 'g')) ||\n        value.address.toLowerCase().match(new RegExp(searchTerm, 'g')) ||\n        value.gender.toLowerCase().match(new RegExp(searchTerm, 'g'))\n    })\n}\n</code></pre>"},{"location":"blogs/How%20to%20Search%20an%20Array%20of%20Objects%20in%20JavaScript%20%28React%29/#calling-the-search-function","title":"Calling the Search Function","text":"<p>Now we'll look at how to use the arraySearch function from a React component.\u00a0 Below we have a Search component that listens for an onChange event, when the onChange event is called the handleOnChange function is called (more on that in a second).\u00a0 Below the Search component is the Container which iterates through the array of objects (population) by calling the map function.\u00a0 The map function generates a person object which is then propagated into a Card object and displays the person's name, age, gender, and address.</p> <pre><code>\n&lt;div className=\"App\"&gt;\n      &lt;div&gt;Count: {count}\n      &lt;Search type=\"text\" name=\"search\" id=\"search\" placeholder=\"Search Filter\" onChange={handleOnChange}/&gt;\n      &lt;/div&gt;\n\n      &lt;Container name=\"container\"&gt;\n        {population.map(person =&gt; (\n        &lt;Card key={person.guid}&gt;\n          &lt;p&gt;Name: {person.name}&lt;/p&gt;\n          &lt;p&gt;Age: {person.age}&lt;/p&gt;\n          &lt;p&gt;Gender: {person.gender}&lt;/p&gt;\n          &lt;p&gt;Address: {person.address}&lt;/p&gt;\n        &lt;/Card&gt;\n        ))}\n      &lt;/Container&gt;\n    &lt;/div&gt;\n</code></pre> <p>As the user types in the Search box, the handle on change the handleOnChange function is called, this function retrieves the target.value from the event.\u00a0 The value is tested to see if it is greater than two in length, if so, then the population (array of objects) and the value are passed to the arraySearch function.\u00a0 The result is captured as a new variable called search and that result is then passed into the population array by calling setPopulation.\u00a0 setPopulation is the setter portion of a useState hook.\u00a0 Also captured is the length of the array, and it's passed to the count variable by calling setCount (also a useState hook).</p> <p>If the value that is passed does not have a length that is greater than two, then the orginal data set is passed to the setPopulation call and the original array length is passed to the count.</p> <pre><code>\nconst handleOnChange = async (e) =&gt; {\n    let value = e.target.value;\n    if (value.length &gt; 2) {\n      let search = await arraySearch(population, value);\n      setPopulation(search)\n      setCount(search.length)\n    } else {\n      setPopulation(people)\n      setCount(people.length)\n    }\n  }\n</code></pre>"},{"location":"blogs/How%20to%20Search%20an%20Array%20of%20Objects%20in%20JavaScript%20%28React%29/#see-it-in-action","title":"See it in Action","text":"<p>Let's see it in action, one thing to notice is the Counter just above the Search input, as the user types the counter will update with the number of elements.\u00a0 As you'll notice in the video, when I search for 'male' the count stays at 50.\u00a0 The reason for that is the match function is searching for the existence of the string but not the whole word.\u00a0 When I search for 'female' the count changes to 21.\u00a0 Pay attention to the Count as I do the different searches.</p> <p>Thanks for reading and I hope that you found this easy to understand and clear.\u00a0 Here is the GitHub repo so you can review the entire project -\u00a0repo</p>"},{"location":"blogs/How%20to%20Setup%20an%20AWS%20SNS%20Topic%20and%20Subscription/","title":"How to Setup an AWS SNS Topic and Subscription","text":"How to Setup an AWS SNS Topic and Subscription <p> What is Amazon SNS? ===================</p> <p>Amazon SNS (Simple Notification Service) is a managed messaging service that decouples publishers from subscribers.\u00a0 It allows an application to send messages downstream to a subscriber based on user defined events.\u00a0 The SNS is composed of two major components - Topics and Subscriptions.\u00a0</p>"},{"location":"blogs/How%20to%20Setup%20an%20AWS%20SNS%20Topic%20and%20Subscription/#sns-topics","title":"SNS Topics","text":"<p>An SNS Topic is a communication channel used for sending messages or events.\u00a0 The Topic can be subscribed to by services such as Amazon SQS, HTTP/S, email, SMS, and Lambda.</p>"},{"location":"blogs/How%20to%20Setup%20an%20AWS%20SNS%20Topic%20and%20Subscription/#sns-subscription","title":"SNS Subscription","text":"<p>An SNS Subscription is the subscriber to your application (publisher), it must be one of the following - Amazon SQS, HTTP/S, email, SMS, and Lambda.\u00a0 The Subscription receives messages after an event happens in your application and is pushed to an SNS Topic.\u00a0</p>"},{"location":"blogs/How%20to%20Setup%20an%20AWS%20SNS%20Topic%20and%20Subscription/#what-youll-learn","title":"What you'll learn","text":"<p>Next we will walk through the steps for creating an SNS Topic and creating an SNS Subscription that is sent to your personal email.\u00a0 This is a great way to test that the Topic and Subscription are working correctly together and that you are successfully subscribed to the correct topic.</p>"},{"location":"blogs/How%20to%20Setup%20an%20AWS%20SNS%20Topic%20and%20Subscription/#create-topic","title":"Create Topic","text":"<p>To get started log into your AWS account and navigate to Amazon SNS.\u00a0 Unless you have previously created a Topic, this section will be blank as shown in the image above.\u00a0 Click the Create Topic button and follow the steps below.</p> <p></p> <p></p> <p>Fill out the Topic Name and Display Name.\u00a0 For the Name, follow the hints below the text box, I reccomend either underscores or dashes for spaces to allow for the best readibility.\u00a0 Once you're done, scroll to the bottom of the page and click the orange Create topic button.</p> <p></p> <p>Now you'll be redirected back to the new Topic where you'll be shown the Topic Name, Display Name, ARN (Amazon Resource Name) and the Topic Owner ID.\u00a0 You'll notice that there are no subscriptions yet, so next we will click the Create subscription button to create a subscription.</p> <p></p> <p></p> <p>Create a subscription by filling in the Topic ARN, Protocol, and Endpoint.\u00a0 As you only have one Topic ARN this will be auto populated.\u00a0 We are selecting Email as the Protocol and finally enter your email address as the Endpoint.\u00a0 At this point scroll to the bottom of the page and click the Create subscription button.</p> <p></p> <p>With the subscription created, switch to your email client and you should have an email with the title of \"AWS Notification - Subscription Confirmation\" or something similar.\u00a0 Open the email and click the Confirm subscription link.\u00a0 This is a critical step, without the confirmation you will not be confirmed and will not receive notifications.</p> <p></p> <p>Now head back to the AWS console and refresh the Demo Topic page, you should see the Status for your subsciption set to Confirmed.\u00a0 One final step, click the Publish Message button at the top of this screen to send yourself a test message.</p> <p> </p> <p>Scroll down to the Message Body section and enter in a test message to yourself and then click the Publish message button.\u00a0 Then head back to your email client to retrieve the message.</p> <p></p> <p>And there you have it, a fully functioning AWS Topic and Subscription setup.\u00a0 Very soon I will have another post on how to use AWS SNS Topics in a Python Flask application and how to test them with Pytest.</p> <p>Thanks for reading!</p>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/","title":"How to Test AWS SNS Topics","text":"How to Test AWS SNS Topics <p>### The Problem</p> <p>Recently I had a client that I worked with who uses AWS SNS Topics to deliver notifications when an event has occurred.\u00a0 The application itself is written in Python and is a Flask app.\u00a0 Testing was core value and the project team stived to have our code coverage as high as possible.\u00a0 They are using many AWS features and most of the others have been relatively easy to test, however SNS topics were different.\u00a0</p>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#what-youll-learn","title":"What you'll learn","text":"<p>By the end of this post you'll learn how to test AWS SNS topics to ensure that your code is processing the data correctly and that you are successfully handling any errors.</p>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#prerequisites","title":"Prerequisites","text":"<p>You will need the following:</p> <p>Python3.7+ installed on your development computer.</p> <p>An active AWS account that you can access the AWS access key id and secret access key.\u00a0 If you don't have an AWS account setup already please see my guide here.</p>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#getting-started","title":"Getting Started","text":"<p>I'm currently using Python 3.7, so if you are using 3.7 or higher you should have no trouble.\u00a0 Change directory (cd) into your local development directory:</p> <pre><code>\ncd ~/Dev\n</code></pre> <p>Next we'll clone the inital demo project:</p> <pre><code>\ngit clone https://github.com/marty331/aws-sns-test\n</code></pre> <p>After you're done, cd into the project directory and then we'll create a virtual environment to work in and we'll activate that virtual environment.\u00a0 We do this so that the packages we install will be installed in this workspace only.</p> <pre><code>\npython -m venv env\n\nsource env/bin/activate\n</code></pre> <p>Next we'll install the following packages:</p> <pre><code>\npip install -r requirements.txt\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#project-setup","title":"Project Setup","text":"<p>Setup an AWS SNS Topic and Subscription for testing, if you don't have one setup yet then follow my guide on how to do this here: How to Setup an AWS SNS Topic and Subscription</p> <p>Now that we have our project directory, virtual environment and initial packages setup, let's run the project, first we'll set our FLASK_APP, FLASK_ENV, and TOPIC_ARN_KEY environment variables, then we'll run the project.</p> <pre><code>\n$ export FLASK_APP=awssns\n$ export FLASK_ENV=development\n$ export TOPIC_ARN_KEY=&lt;your-topic-arn-key&gt;\n$ export AWS_REGION=us-west-1\n$ flask run\n\n\n</code></pre> <p>once this is complete, you should see some output like this:</p> <pre><code>\n* Serving Flask app \"awssns\"\n* Environment: dev\n* Debug mode: off\n* Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n</code></pre> <p>and of course you'll want to visit the url in your browser, which should return back - \"Hello, World!\"</p> <p>Now we can run a simple curl command to test out our SNS topic:</p> <pre><code>\ncurl -X POST http://localhost:5000/test-sns?message=Hello%20SNS\n</code></pre> <p>Now, assuming you followed my guide linked above, you should get an email that looks something similar to this:</p> <p></p> <p>If you received the email successfully, great!\u00a0 Pat yourself on the back.\u00a0 You have sucessfully created an AWS SNS Topic and recieved a notification from it.\u00a0 You have proved it works, so blog post over right?\u00a0 Not so fast!\u00a0 Now the fun (for you) begins, we will test the SNS Topic with Pytest.</p>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#messagespy-review","title":"Messages.py Review","text":"<p>First, let's review the actual SNS Topic code so we can know what we need to test.\u00a0 The top section is all of the imports that we need.\u00a0 I'll skip over the standard library imports and go straight to boto3 - the main library for connecting to AWS in Python.\u00a0 If this were app I were optimizing for production I would import only the client from the boto3 library.\u00a0 Next we import the ClientError from botocore.exceptions.\u00a0 As you probably guessed, this is the error class associated with the boto3 library.\u00a0 And finally we import CFG from the cfg.py file.\u00a0 cfg.py is an building an implementation of the decouple library and gives up an easy way to reference environment variables from .env files or from environment variables.\u00a0 It also works great if you are deploying an AWS Lambda function.</p> <pre><code>\n# messages.py file\n# imports start\nimport os\nimport json\nimport logging\n\nfrom typing import Dict, Any\nfrom abc import ABC\n\nimport boto3\n\nfrom botocore.exceptions import ClientError\n\nfrom awssns.cfg import CFG\n#imports end\n\n\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#setup-logging","title":"Setup Logging","text":"<p>We initialize our logger, keeping it very simple here and not adding in any configuration as we just want to get simple messages and feedback.</p> <pre><code>\n#initialize logger\nlogger = logging.getLogger()\n\n\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#abstract-route","title":"Abstract Route","text":"<p>For good measure we'll create a class that extends the ABC class.\u00a0 We're only using this to initialize our payload but if you have multiple classes I reccomend creating a base class like this to inheirt from.</p> <pre><code>\n\n# create abstract class from ABC class, not 100% but good practice\nclass AbstractRoute(ABC):\n    def __init__(self, payload) -&gt; None:\n        self.payload = payload\n\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#message-class","title":"Message Class","text":"<p>Finally we create our Message class, which will contain all of the functionality for creating the SNS Topic and sending it to AWS.\u00a0 It inheirts the AbstractRoute class and therefore must contain a payload (our message).\u00a0 We create a function (route) that will control the flow and publishing of the SNS Topic message.\u00a0</p> <pre><code>\n\n# create message class, inherit from AbscractRoute\nclass Message(AbstractRoute):\n    # function that sends the SNS message\n    def route(self) -&gt; Dict[str, Any]:\n        sns_client = self.get_sns_client()\n        response = self.publish_sns_message(\n            sns_client=sns_client, topic_arn=CFG.TOPIC_ARN_KEY, message=self.payload\n        )\n        if response[\"ResponseMetadata\"][\"HTTPStatusCode\"] == 200:\n            return response\n        return {\"ResponseMetadata\": {\"HTTPStatusCode\": 500}}\n\n\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#get-sns-client","title":"Get SNS Client","text":"<p>A boto3 client is created for SNS Topics, this requires the service name and region name.\u00a0 The service name is \"sns\" and the region name will be something like \"us-west-1\".\u00a0 Assuming you have your AWS credentials setup correctly this this function will return back a boto3 SNS client.</p> <pre><code>\n# connect to AWS via boto3 library\n    def get_sns_client(self) -&gt; boto3.client:\n        return boto3.client(\"sns\", region_name=CFG.AWS_REGION)\n\n</code></pre>"},{"location":"blogs/How%20to%20Test%20AWS%20SNS%20Topics/#publish-sns-message","title":"Publish SNS Message","text":"<pre><code>\n# publish the message to the SNS topic\n    def publish_sns_message(\n        self, sns_client: boto3.client, topic_arn: str, message: Dict[str, Any]\n    ) -&gt; Dict[str, Any]:\n        try:\n            response = sns_client.publish(\n                TopicArn=topic_arn,\n                Message=json.dumps(\n                    {\"default\": message}\n                ),  # json.dumps is required by FxA\n                MessageStructure=\"json\",\n            )\n            return response\n        except ClientError as e:\n            logger.error(\"SNS error\", error=e)\n            raise e\n</code></pre>"},{"location":"blogs/How%20to%20find%20the%20number%20of%20decimals%20in%20a%20number%20minus%20the%20trailing%20zeros%20in%20TypeScript/","title":"How to find the number of decimals in a number minus the trailing zeros in Typescript","text":"How to find the number of decimals in a number minus the trailing zeros in TypeScript <p> Finding the number of decimals in a number minus the trailing zeros can be a useful skill in many situations, such as when dealing with financial data or precision calculations. In Typescript, there are several ways to accomplish this without converting the number to a string.</p> <p>One approach is to use the built-in Math.log10() function, which returns the base 10 logarithm of a number. We can use this function to calculate the number of decimals in a number by taking the difference between the logarithm of the original number and the logarithm of the integer part of the number. For example:</p> <pre><code>\nconst num = 123.456;\nconst intPart = Math.trunc(num);\nconst decimals = Math.log10(num) - Math.log10(intPart);\n\nconsole.log(decimals); // 3\n</code></pre> <p>However, this approach will not accurately account for trailing zeros, as they will still be counted as part of the decimal component. To address this, we can use a regular expression to remove the trailing zeros and then calculate the number of decimals using the same method as above.</p> <pre><code>\nconst num = 123.45600;\nconst numWithoutTrailingZeros = num.toString().replace(/0+$/, '');\nconst intPart = Math.trunc(numWithoutTrailingZeros);\nconst decimals = Math.log10(numWithoutTrailingZeros) - Math.log10(intPart);\n\nconsole.log(decimals); // 2\n</code></pre> <p>Another approach is to use the built-in Number.toFixed() function, which returns a string representation of a number with a specified number of decimal places. We can use this function to calculate the number of decimals in a number by passing in a value for the number of decimal places that is greater than the number of actual decimals in the number. For example:</p> <pre><code>\nconst num = 123.456;\nconst numWithExtraDecimals = num.toFixed(10);\nconst decimals = numWithExtraDecimals.length - numWithExtraDecimals.indexOf('.') - 1;\n\nconsole.log(decimals); // 3\n\n</code></pre> <p>This approach will also accurately account for trailing zeros, as they will be automatically removed by the toFixed() function.</p> <p>In conclusion, there are several ways to find the number of decimals in a number minus the trailing zeros in Typescript without converting to a string. Whether you use the logarithm approach, the regular expression approach, or the toFixed() approach, you can easily and efficiently calculate the number of decimals in a number in your Typescript code.</p> <p>Photo by Sathesh D: https://www.pexels.com/photo/closeup-photo-of-black-computer-keyboard-s-left-side-keys-698808/</p>"},{"location":"blogs/I_have_the_future/","title":"I have the future sitting on my face!","text":"I have the future sitting on my face! <p>So I picked up Glass on July 12th at the downtown office in San Francisco.\u00a0 For my first impression I was a little underwhelmed.\u00a0 Don\u2019t hang up!!\u00a0 I think I felt underwhelmed because first off the doors were locked and I could barely get into the Google office (Don\u2019t they know who I am!), I ended up banging on the glass door with a quarter to get the attention of a couple of Glass guides that were in a deep conversation and didn\u2019t know that it was my time (For the record I was two hours early for my appointment), nonetheless I gained access and was shuttled to the elevator to Glass heaven.</p> <p>I was checked in and told to decide on a color and let them know when I was ready.\u00a0 I tried on every color, I believe I tried on red first, then blue, white, shale and finally charcoal.\u00a0\u00a0 I choose charcoal.\u00a0 It was really the only choice.</p> <p></p> <p> </p> <p>So my Glass guide Josh brought out my unit and we found a seat.\u00a0 I truly felt like it was Christmas morning, I had it\u2026. it was in my hands. Finally.\u00a0\u00a0 The future was sitting in the box in front of me.\u00a0 I unboxed it slow.\u00a0 It deserved the respect.\u00a0 Under the box lid, which was quite heavy, was this perfect was paper stretched tight.\u00a0 Under the wax paper is where it sat.\u00a0 I powered it on and placed it on my head.\u00a0 A few adjustments were done and it was in place.</p> <p>My Glass unit wasn\u2019t configured when I picked it up so my Glass guide and I spent a few minutes setting up my contacts and and choosing the Glassware I wanted to enable (I did not enable Elle or facebook).\u00a0 The really cool thing about this part is I was able to use a Chromebook Pixel!\u00a0 Next I paired it with my phone and out we went for the obligatory pic of the bay.\u00a0 Josh went over a few of the essentials with me and then answered a couple of questions (I\u2019d pre-studied so there wasn\u2019t much I didn\u2019t know already) and I was released into the wild.</p> <p>I took off and since I wasn\u2019t 100% sure how to get back to the BART station and I had the future on my face, I looked up directions to the station.\u00a0 Walking directions.\u00a0 Why am I pointing out that they were walking directions, well the map moves with your head as you walk.\u00a0 WOW!\u00a0 I was amazed at this, the future is totally AWESOME!\u00a0 Also, I suddenly felt terrified, I had a $1500 computer sitting on my face and suddenly felt like I was an easy target.\u00a0 Looking back now I feel that was a ridiculous thought, no one has attempted to rob me yet and if they do I\u2019ll record them and beat the shit out of them at the same time.</p> <p>I played with Glass for a bit back at my hotel but due to total exhaustion from not sleeping because of the excitement of getting Glass and my soon to be one year old daughter who was up a lot the night before teething I was exhausted.\u00a0 Sleep.</p> <p></p> <p> </p> <p>4 AM Wake.\u00a0 Uggh.\u00a0 Off to the airport and heading home.\u00a0 At the airport in public I wonder, are people looking at the thing on my face?\u00a0 Hmmm.\u00a0 Not yet, it\u2019s 5 AM and no one there seems to have had coffee, I know I hadn\u2019t.\u00a0 Coffee, flight to Denver.\u00a0 I change planes and notice a girl that was on my previous flight is in this gate also, and she\u2019s staring.\u00a0 She got the courage to come ask me what this strange thing was on my face (yes I did have Glass on, wasn\u2019t just my face.). I explained what I knew so far and that I didn\u2019t work for Google.\u00a0 Since then it\u2019s become a common occurrence for strangers to talk to me about Glass.\u00a0 Everyone wants to know what Glass is like (It\u2019s awesome!) and they come right up and ask\u2026. or point and I\u2019ll hear them say \u201cThat guy is wearing Glass!\u201d</p> <p>My family picked me up at Love Field when I got back from San Francisco, my son wanted to wear Glass immediately. \u00a0I made him wait till we were home to try them out. \u00a0He loved Glass! \u00a0He got it right away and could easily use the voice commands and take pictures. \u00a0He\u2019ll never know world without wearable technology. \u00a0He will grow up in the world of the Jetsons.</p> <p>Glass is still a beta product, it\u2019s not ready for prime time\u2026.. yet.\u00a0 It will be.\u00a0 Soon.\u00a0 Everyone had better get ready.\u00a0 Glass will be huge!\u00a0 Huge!\u00a0 Apps are being written for Glass everyday.\u00a0\u00a0 That\u2019s the reason I have Glass.\u00a0 I want to write some great apps for Glass and I\u2019m extremely lucky to have the explorer edition (XE).</p> <p>Glass has some shortcomings, current version is XE7 (a new version is currently released each month, so improvements happen fast.) and it has a web browser but it is not really something that is enjoyable.\u00a0 Also, you get what I call an email notification, a snippet of your email message and no way to view attachments including pictures.\u00a0 You cannot view pictures on an MMS either.</p> <p>Glass also does some things very well and has potential to do so many more things, mainly hands free with just your voice.\u00a0 Glass is awesome at taking pictures and video while keeping the user involved in the current activity, it\u2019s great at delivering texts, email notifications and doing a fast Google search.\u00a0 Glass is great at forcing the user to maintain eye contact with everyone they are speaking to add you are forced to keep the prism above your line of sight.\u00a0 The hardest thing about learning to use Glass is learning to keep your head up when you\u2019re having a conversation with someone.</p> <p>I love my Glass, I look forward to using it everyday and I am looking forward to seeing what it becomes.\u00a0 It will be huge.\u00a0 HUGE.</p> <p> </p> <p> </p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/","title":"Jellyfin on a Raspberry Pi 4 - The Complete Setup","text":"<p>![header](../assets/images/jellyfin/music_guide.jpg) If you're like me, you have tons of music stored in Google Play Music.\u00a0 So the September 2020 shutdown of Google Play Music was a real bummer to me.\u00a0 Google allowed me to move my music to YouTube Music, but let's be real, YouTube Music is subpar at best.\u00a0 I carry an Android smartphone, and on Android the YouTube Music app stops playing when you lock the screen unless you are paying customer.\u00a0 So there's no going for a run with music, there's no walking the dogs with music, there's no driving with music, etc.\u00a0 You get the picture.</p> <p>So I set out on a quest to find a replacement.\u00a0 A lot of my friends really like Plex but I've tried Plex before and I didn't love it.\u00a0 I spend a couple of weekends setting up Nextcloud but the music player was just not good, no, it is bad.\u00a0 I had almost given up, then as I was listening to the Linux Unplugged podcast one afternoon in Dec they mentioned Jellyfin.\u00a0 I thought to myself, could this be it?\u00a0 Could this work?\u00a0\u00a0</p> <p>I'm happy to report that this is the BEST I've seen so far and as of now I have it fully working.\u00a0 I have Jellyfin running on my Raspberry Pi 4, with approximately 78 GB of music.\u00a0 It is exposed via fully qualified domain so that I can listen from my phone or computer anywhere in the world with an internet connection.\u00a0 It works on my browser, has and Android app and iOS app.\u00a0 I have set up accounts for myself, my wife and my kids, so everyone can create their own playlists.</p> <p>Without further ado, let's hop in and go through the setup!</p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/#raspberry-pi-setup","title":"Raspberry Pi Setup","text":"<p>I'm running Ubuntu 20.04 on my Raspberry Pi but I'm sure that Raspbian will work as well.\u00a0 You will need to have root access, docker installed and have SSH enbabled on your Pi, so if you don't have that done stop here and get that enabled.\u00a0 Also, I would highly reccomend you setup a static IP address on your Pi and have your music loaded on your Raspberry Pi as well.\u00a0 I have my music stored right on the SD card that contains my OS in my home directory, you may store yours on an external drive, either way you will need the file path to the music directory.</p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/#install-jellyfin","title":"Install Jellyfin","text":"<p>To install Jellyfin you'll need to run the following commands, remember you're doing this via SSH on your Raspberry Pi.</p> <pre><code>\nsudo apt install apt-transport-https\n\nwget -O - https://repo.jellyfin.org/jellyfin_team.gpg.key | sudo apt-key add -\necho \"deb [arch=$( dpkg --print-architecture )] https://repo.jellyfin.org/$( awk -F'=' '/^ID=/{ print $NF }' /etc/os-release ) $( awk -F'=' '/^VERSION_CODENAME=/{ print $NF }' /etc/os-release ) main\" | sudo tee /etc/apt/sources.list.d/jellyfin.list\n\nsudo apt update\n\nsudo apt install jellyfin\n</code></pre> <p>Now open a new tabl on your browser and navigate to the following URL:</p> <pre><code>\nhttp://&lt;raspberry_pi_ip_address&gt;:8096\n</code></pre> <p>You will be greeeted with Jellyfin page!\u00a0 Here you'll need to go through the setup process, the first still will be to choose the language and then click Next.</p> <p></p> <p>Create a Username and Password, then click Next.</p> <p></p> <p>I won't go through every step, but will go through a few that are important.\u00a0 Click Add Media Library and then you'll need to enter the path to your music (remember we mentioned you would need this path).</p> <p></p> <p>Enter the path to your music, then tab and scroll down.</p> <p></p> <p>When I first setup JellyFin I only selected MusicBrainz but didn't get all of my album art, song titles, etc.\u00a0 I went back later on and selected both MusicBrainz and TheAudioDB and then had to wait for all of my musc to be scanned again.\u00a0 I'll save you from that pain, go ahead and select both options here in both of the areas below.\u00a0 Scroll on down and choose Nfo and save artwork in your media folders.\u00a0 After that click OK.</p> <p></p> <p>Your music library is setup and we are almost done.\u00a0 Click Next.</p> <p></p> <p>On the Configure Remote Access page, leave Allow remote connections to the Jellyfin Server selected but do not check Enable automatice port mapping.\u00a0 Then click Next.</p> <p></p> <p>You did it!\u00a0 Click finish to complete the setup.\u00a0</p> <p></p> <p>After that you'll be asked to login with your Username and Password.\u00a0 It will take a while to download all of the music metadata and artwork.\u00a0 Till then you'll see a lot of blue boxes but Jellyfin is fully functional and setup.\u00a0 At least it is inside your network.</p> <p>We could stop here and call it done.\u00a0 But the moment you walk out of WiFi range then no more music for you.\u00a0 What you really want is to expose your Jellyfin setup to the outside world, securely.\u00a0 So let's get started on that part.\u00a0 I promise it's not that hard and it won't even hurt.</p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/#router-setup","title":"Router Setup","text":"<p>This will vary wildly depending on the router that you have, but in short you want to forward\u00a0ports 80 and 443 and to your Raspberry Pi.</p> <p>My router is by Netgear, so to accomplish this I log in to the router, go to Advanced &gt; Advanced Setup &gt; Port Forwarding/Port Triggering.\u00a0 Select HTTP from the Service Name dropdown, fill in the Raspberry Pi IP address and click Add, this opens up port 80 to my Raspberry Pi.\u00a0 Next click\u00a0Add Custom Service and then fill out the form for port 443 and my Raspberry Pi IP address.\u00a0 After this is done make sure the page is saved on your router to preserve the open ports.</p> <p></p> <p>As I mentioned this will very greatly depending on the router that you have but the process should be somewhat similar.\u00a0 You can Google how to forward ports on your specific router and get this step done.</p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/#cloudflare-dns-setup","title":"Cloudflare DNS Setup","text":"<p>At this point we will setup Cloudflare to route traffic to your IP address.\u00a0 You will need a custom domain for this part.\u00a0 If you don't have one already you can purchase a custome domain from many different sources.\u00a0 I've used several domain registars in the past but currently I prefer Google Domains,\u00a0https://domains.google.com/. Pick one that works for you and get it setup.\u00a0 You will need access to the domain during this step.</p> <p>After you have your domain registered then we'll setup Cloudflare's DNS service.\u00a0 You will need to create an account on Cloudflare, the free version works just fine for what we need to do.\u00a0 So navigate to Cloudflare and create an account.</p> <p></p> <p>Next you'll need to enter your domain name, such as example.com (you'll not enter in http://, just the domain name).</p> <p></p> <p>After you have entered your domain you will be taken to a page to select your account type, just scroll down and choose the free plan and click Continue</p> <p></p> <p>After you have selected your plan you'll be asked to verify your DNS records, skip this page for now and click Continue.\u00a0 Then you'll be presented with the Change your nameservers screen.\u00a0 This is a very important step.\u00a0 You'll need to remove your current nameservers and replace them with Cloudflare's nameservers.\u00a0 Here's what mine looked like -\u00a0</p> <p></p> <p>Just replace your current nameservers with the new nameservers in step 4 and save them on our registar page.\u00a0 This will vary depending on which service you use, but it should be pretty easy to do.\u00a0 You may have 2 or 3 nameservers in your current service, and you'll be replacing them with the two that Cloudflare provides.\u00a0 Notice the warning that is in step 5, it could take 24 hours but in reality mine were ready right away.\u00a0 You're milage may vary on this step, so you may have a wait a little bit.\u00a0 Click Done, check nameserves and see if Cloudflare can validate, once validated you'll be taken to an overview page.</p> <p>Select the SSL/TLS tab and make sure Full is selected.</p> <p></p> <p>Now you'll need to change the DNS settings to point to your router.\u00a0 For this step you need the IP address for your home router.\u00a0 An easy way to get this is to go to Google and type in \"what is my ip address\".\u00a0 A word of warning, your IP address could change unless you have a static IP address from your service provider, so you may have to update this in the future.\u00a0 I use DynDNS but I have not figured out how to link that service to Cloudflare (yet).\u00a0 You'll need to setup a CNAME record for jellyfin (this is your subdomain that will be pointed to your Raspberry PI, so it can be anything you want but since we're setting up Jellyfin, I went with jellyfin)\u00a0and your domain name and an A record for your domain name and home IP address.\u00a0</p> <p>Lastly, you must change the Proxy status for both of these records to DNS only, they will be defaulted to Proxied.\u00a0 Just click on Proxied and you will be able to change to DNS only.</p> <p></p> <p>OK, give yourself a pat on the back.\u00a0 You're done with that step, to me that was the hardest step as I hadn't used Cloudflare before.</p>"},{"location":"blogs/Jellyfin%20on%20a%20Raspberry%20Pi%204%20-%20The%20Complete%20Setup/#nginx-proxy-manager-setup","title":"Nginx Proxy Manager Setup","text":"<p>Here's the final step to setting up Jellyfin and being able to use it remotely.\u00a0 We'll setup Nginx Proxy Manager, which allows us to expose web services on our network and even will provide an SSL certificate from Let's Encrypt.</p> <p>For this step we'll SSH into the Raspberry Pi and then from the SSH connection you'll need to install some dependencies for Ngninx Proxy Manager with the following commands:</p> <pre><code>\nsudo apt-get install -y libffi-dev libssl-dev\nsudo apt-get install -y python3 python3-pip\nsudo pip3 -v install docker-compose\n</code></pre> <p>After the dependenices are installed then we'll create a directory for nginx and a config file.\u00a0 Here are the commands:</p> <pre><code>\nmkdir nginx\ncd nginx\nnano config.json\n</code></pre> <p>Next paste the following into the config.json file and save the file -</p> <pre><code>\n{\n  \"database\": {\n    \"engine\": \"mysql\",\n    \"host\": \"db\",\n    \"name\": \"npm\",\n    \"user\": \"npm\",\n    \"password\": \"npm\",\n    \"port\": 3306\n  }\n}\n</code></pre> <p>Next we'll create a docker-compose file -</p> <pre><code>\nnano docker-compose.yml\n</code></pre> <p>and we'll enter the following into the docker-compose file and save -</p> <pre><code>\nversion: '3'\nservices:\n  app:\n    image: 'jc21/nginx-proxy-manager:latest'\n    ports:\n      - '80:80'\n      - '81:81'\n      - '443:443'\n    volumes:\n      - ./config.json:/app/config/production.json\n      - ./data:/data\n      - ./letsencrypt:/etc/letsencrypt\n  db:\n    image: 'yobasystems/alpine-mariadb:latest'\n    environment:\n      MYSQL_ROOT_PASSWORD: 'npm'\n      MYSQL_DATABASE: 'npm'\n      MYSQL_USER: 'npm'\n      MYSQL_PASSWORD: 'npm'\n    volumes:\n      - ./data/mysql:/var/lib/mysql\n</code></pre> <p>So the docker-compose.yml file will use docker to create a container called app and will pull the lastest version of Nginx Proxy Manager, it will open up ports 80, 81, and 443. It will link several volumn files such as\u00a0the config.json file will be linked to the production.json file.\u00a0 Also it will create a container called db that will be running MariaDB with will store the Nginx Proxy Manager's data.</p> <p>Now we'll actually build those container and run them by issuing the following command -\u00a0</p> <pre><code>\nsudo docker-compose up -d\n</code></pre> <p>You'll see the containers being downloaded and built, once this process is finished we'll issue two more command so both the app container and the db container will be started automatically whenever your Raspberry Pi reboots -</p> <pre><code>\nsudo docker update --restart always nginx_app_1\nsudo docker update --restart always nginx_db_1\n</code></pre> <p>Once those are done you MUST reboot the Raspberry Pi (don't skip this step)</p> <pre><code>\nsudo reboot now\n</code></pre> <p>Wait for a minute or so for your Raspberry Pi to reboot and then SSH back in and validate that the containers are running -</p> <pre><code>\ndocker ps\n</code></pre> <p></p> <p>Once the containers have a status of Up, then you are ready to move on to the next step.\u00a0 It may take a minute for them to reach this status, if so just keep running the docker ps command and get the most up to date status.</p> <p>Now you'll want to open a browser tab and navigate to the following:</p> <pre><code>\nhttp://&lt;raspberry_pi_ip_address&gt;:81\n</code></pre> <p>You'll be presented with the login screen for Nginx Proxy Manager.\u00a0 The default email address is admin@example.com\u00a0and the password is changeme.\u00a0 Login with those credentials and then you can change them to your actual email and create a password.</p> <p></p> <p>After you have your account squared away, you'll need to setup the Proxy.\u00a0 Click on Hosts &gt; Proxy Hosts &gt; Add Proxy Host.</p> <p></p> <p>Here you will enter your subdomain and domain like the example below.\u00a0 You'll need your Raspberry Pi IP address and you'll put that in the Forward Hostname/IP, enter 8096 in the Forward Port (this is the default port for Jellyfin), click Block Common Exploits.\u00a0 Before you save click the SSL tab.</p> <p></p> <p>Under SSL Certificate select Request a new SSL Certificate, then select HTTP/2 Support, and I Agree to the Let's Encrypt TOS and finally Save.\u00a0 You will be issued an SSL Certfificate and the Proxy will be setup.</p> <p></p> <p>Guess what?\u00a0 You're done! Open a new tab and navigate to your URL https:// to confirm that you can reach Jellyfin in the browser.\u00a0 You'll need to log in with your account credentials that you created way back at the beginning of this post.\u00a0 Oh and by this point, your music has probably already finished being scanned and you should have album art and metadata (that's why we did that early on).\u00a0 It's time to rock out!\u00a0\u00a0 <p>So your setup in the browser but you probably want to listen on your phone as well, so download the app from your app store.\u00a0 When you open up the Jellyfin app it will ask you for your server and you'll use that same URL that you naviagated to in your browser -\u00a0https://. <p>That's it, we're done!\u00a0 I hope you enjoyed this post and I hope it helped you get setup.</p>"},{"location":"blogs/Project_Fi/","title":"Google's Project Fi - Two years in","text":"Google\u2019s Project Fi \u2013 Two Years In What is Project Fi? <p>For those of you that haven\u2019t heard of Project Fi before, I\u2019m pleased to inform you about this product that Google offers. \u00a0Project Fi is Google\u2019s MVNO (Mobile Virtual Network Operator) and Project Fi offers users nationwide cellular coverage in the US and free roaming abroad.</p> How does this work? <p>Google partners with several cellular providers to offer you the best signal for the area that you happen to be in at that time. \u00a0Project Fi\u2019s cellular partners are T-Mobile, Sprint, and US Cellular. \u00a0Project Fi also relies heavily on WiFi by routing calls and data (obviously) through your WiFi connection when you are on a WiFi connection. \u00a0 Your phone seamlessly switches between one of the carrier signals and WiFi to provide continuous service.</p> What about coverage? <p>You can check the coverage map for yourself (Project Fi Coverage) and see if you\u2019ll be covered, chances are extremely high that coverage will not be an issue. \u00a0Take it from me, I go deep in the woods from time to time and always have a cell signal. \u00a0I recently went on vacation to Colorado and noticed in the far North Texas that I did not have a signal, this was so out of the ordinary that it stuck with me where I was when I this happen! \u00a0(Childress, TX if you want to find it on a map (don\u2019t blink))</p> Can I use my current phone? <p>The answer to that is maybe but probably not. \u00a0To make the magical network switching work seamlessly, as I mentioned above, you\u2019ll need to be on one of Project Fi\u2019s approved phone list. \u00a0Here are the phones that are currently supported on Project Fi: \u00a0Pixel, Pixel XL, Nexus 6P, Nexus 5X, and Nexus 6. \u00a0 Each of these phones support both GSM and CDMA networks and Project Fi has approved them to be supported on the network.</p> How much does this service cost? <p>Service starts at $20/month for Project Fi Basics \u2013 it includes unlimited domestic talk and text, unlimited international texts, Wi-Fi tethering to use your phone as a hotspot, and access cellular coverage in 135+ countries and destinations. \u00a0However data is extra and it\u2019s $10/Gigabyte. \u00a0This is not the cheapest plan on the market datawise but Project Fi is constantly attempting to connect you to WiFi and any data you use there is not counted against your data usage on your Project Fi bill.</p> <p>Here is the best part about Project Fi\u2019s data cost \u2013 you are NOT buying it by the Gigabyte, you literally pay one cent per Megabyte, that\u2019s $0.01/MB. \u00a0Project Fi is a pre-paid service, so if you budget to use 2 GB/month, your bill would be $20 for basic service + $20 for data + Taxes and regulatory fees (mine are $3.98/month). \u00a0That would be a total of $43.98 for the month.</p> What about going over \u00a0your budgeted data? \u00a0Or not using all of your data? <p>Hold onto your pants here! \u00a0Remember how I told you that you pay $0.01/MB, if you go over you are NOT buying another GB of data, you are paying $0.01/MB that you used over the amount you have budgeted. \u00a0So if you go over by 1 MB, then your bill goes us $0.01! \u00a0Isn\u2019t that AWESOME!</p> <p>But wait, it gets even better. \u00a0Suppose you didn\u2019t use all of your data, what happens to the unused data? \u00a0It\u2019s not stored in a bucket for you to never use in the future. \u00a0It\u2019s not lost and money wasted. \u00a0Are you ready to know what happens? \u00a0You get that money credited back to your account. \u00a0Refunded if you will. \u00a0Seriously, I\u2019m not making this up, look at this picture of one of my bills \u2013</p> <p></p> <p> </p> <p>You thought I was lying didn\u2019t you! \u00a0Shame on you. \u00a0You do see the line that says Unused data \u2013 Credit for 0.408 GB at $10/GB ($4.09). \u00a0My bill that month was $39.89, that was the total. \u00a0I\u2019m the first to admit that $10/GB is not the cheapest plan but I\u2019ve learned to live with it as I\u2019m on WiFi almost all of the time and for the times I\u2019m not I\u2019m cognizant of this and try to not do things like stream YouTube or NetFlix.</p> Pluses for Project Fi <ul> <li>Excellent coverage</li> <li>International Roaming</li> <li>Easy to use</li> <li>Seamless switching between services</li> </ul> Minuses for Project Fi <ul> <li>Phone selection</li> <li>Data costs</li> </ul> Should you use Project Fi? <p>I\u2019ve been on Project Fi for two years now and I really don\u2019t even think about my phone coverage any longer. \u00a0I am cognizant of my data usage when I\u2019m not in a WiFi area but I work in an office that has WiFi, I have great WiFi at home and usually if I\u2019m going somewhere and want to use my phone for music or podcasts I have them downloaded and I don\u2019t stream anything. \u00a0I highly recommend Project Fi and think you should give it a try.</p> <p>Finally here is my shameless plug, if you sign up please do so with my sign up link so I can get a credit from you!\u00a0Project Fi Signup</p> <p> </p> <p>Thanks for reading!</p> <p> </p>"},{"location":"blogs/Python%203.9%20Dict%20Merge%20and%20Update/","title":"Python 3.9 Dict Merge and Update","text":"Python 3.9 Dict Merge and Update <p> Python 3.9 Dict Merge and Update Operations ===========================================</p> <p>Python 3.9 was released on Oct 5, 2020 (2020-10-05 for programming purposes), and with it there are several new features.\u00a0 This post will be one of several short posts showing off those changes.</p>"},{"location":"blogs/Python%203.9%20Dict%20Merge%20and%20Update/#dict-merge","title":"Dict Merge","text":"<p>Merging two dicts is something you may need to do when you have data coming from multiple sources and would like to only have a single dict to use in your application.\u00a0 It has become very easy in Python 3.9.\u00a0 Let's take a look at that now.</p> <p>To merge two dicts we'll simple use the pipe (|) operator:</p> <pre><code>\n\nx = {\"word1\": \"Hello\", \"word2\": \"World\", \"word3\": \"!\"}\ny = {\"word2\": \"from\", \"word3\": \"Python3.9\"}\n\n&gt;&gt;&gt; x\n{'word1': 'Hello', 'word2': 'World', 'word3': '!'}\n&gt;&gt;&gt; y\n{'word2': 'from', 'word3': 'Python3.9'}\n&gt;&gt;&gt; x | y\n{'word1': 'Hello', 'word2': 'from', 'word3': 'Python3.9'}\n</code></pre> <p>As you can see the word2 and word3 elements are updated with the values from the y dict to create a single new dict with the merged keys.</p>"},{"location":"blogs/Python%203.9%20Dict%20Merge%20and%20Update/#dict-update","title":"Dict Update","text":"<p>Updating a dict with the values from another dict is also made easier in Python 3.9.\u00a0 To update a dict you'll use the update command (|=) and the original dict will be updated with the values from the second dict.\u00a0 Let's take a look:</p> <pre><code>\n&gt;&gt;&gt;&gt; x = {\"word1\": \"Hello\", \"word2\": \"World\", \"word3\": \"!\"}\n&gt;&gt;&gt; y = {\"word2\": \"from\", \"word3\": \"Python3.9\"}\n&gt;&gt;&gt; x\n{'word1': 'Hello', 'word2': 'World', 'word3': '!'}\n&gt;&gt;&gt; y\n{'word2': 'from', 'word3': 'Python3.9'}\n&gt;&gt;&gt; x | y\n{'word1': 'Hello', 'word2': 'from', 'word3': 'Python3.9'}\n\n&gt;&gt;&gt; x |= y\n&gt;&gt;&gt; x\n{'word1': 'Hello', 'word2': 'from', 'word3': 'Python3.9'}\n</code></pre> <p>With these small changes Python has become easier to use and understand.\u00a0 I hope this helps you out and if you have any feedback please let me know by leaving a comment.\u00a0</p>"},{"location":"blogs/Python%20Environment%20Variables%20the%20Right%20Way%20-%20Decouple/","title":"Python Environment Variables the Right Way - Decouple","text":"Python Environment Variables the Right Way - Decouple"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/","title":"React - Communicate between Parent and Child Functional Components","text":"React - Communicate between Parent and Child Functional Components"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/#functional-component","title":"Functional Component","text":"<p>Before we get started with how to communicate between Functional components, let's define what a Funcitonal component is and isn't.\u00a0</p> <p>One other thing to note, I'm using TypeScript.\u00a0 If you aren't useing TypeScript you should really consider it as it will greatly reduce the number of errors you may inadvertantly inject into your codebase.</p> <p>A Functional component is simply a function that returns a React fragment.\u00a0 Here's the simplest example:</p> <pre><code>\nimport React from 'react';\n\nconst Simple: React.FC&lt;React.FunctionComponent&gt; = () =&gt; {\n  return(\n    &lt;&gt;\n      &lt;h1&gt;Simple Functional Component&lt;/h1&gt;\n    &lt;/&gt;\n  )\n};\n\nexport default Simple;\n</code></pre> <p>This Functional component named Simple, takes no props and returns a React element containing an h1 with an innerText value of \"Simple Functional Component\".\u00a0 The &lt;&gt; and  tags are shorthand for React Fragment, this could have also returned the following:</p> <pre><code>\n&lt;React.Fragment&gt;\n  &lt;h1&gt;Simple Functional Component&lt;/h1&gt;\n&lt;/React.Fragment&gt;\n</code></pre> <p>A React Functional component does not have to explicitly return an React.Fragment, but it must return a single element that contains zero or more sub-elements.</p> <p>Typically you will have Functional components that contain other React components, when that is the case then the component that contains other components is considered the parent and the components that are included are considered to be child components.</p>"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/#communiction-between-functional-components","title":"Communiction Between Functional Components","text":"<p>Functional components communicate by setting props to variables or functions.\u00a0 These functional props are then executed on the receiving functional component.\u00a0 And the good news is, this can go from a Parent to a Child or from a Child to a Parent.\u00a0 Let's start off with a very simple example and then we'll move to a more complicated setup.</p>"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/#parent-to-child-communication","title":"Parent to Child Communication","text":"<p>In this example we'll simplly send the title value from the parent to the child.</p> <pre><code>\nexport default function Parent() {\n  const [child2Title, setChild2] = useState('Child2')\n\n  return (\n    &lt;div className=\"parent_container\"&gt;\n      &lt;h1&gt;Parent Component&lt;/h1&gt;\n      &lt;div className=\"child_container\"&gt;\n        &lt;Child2 \n          title={child2Title}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n-----------------------\ninterface Child2Props {\n  title: string;\n}\n\nconst  Child2: React.FC&lt;Child2Props&gt; = (props) =&gt; {\n  return(\n    &lt;div className=\"child2\"&gt;\n      &lt;h2&gt;{props.title}&lt;/h2&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>As you can see, we create a variable named child2Title when the Parent component is initialized.\u00a0 The Parent component sends the child2Title variable to the Child2 component set as the title prop.\u00a0 Then we create an interface named Child2Props with a string named title.\u00a0 The Child2 component is created using the Child2Props interface and the title in the h2 element is set to props.title.\u00a0</p> <p>The parent sent the child a variable that was then used to set a value in the Child2 component.\u00a0 Both components are functional components.\u00a0 No constructors were needed, the code is very simple and clean.\u00a0 Easy.</p>"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/#bidirectional-communication","title":"Bidirectional Communication","text":"<p>Now we'll move into a more complicated scenario.\u00a0 What if we wanted to have the h1 value updateable in the Parent and Child2 components?\u00a0 And we want to do it from Child1.\u00a0 Is that even possible?\u00a0 Is it possible to update a value from a child to a parent?\u00a0 Is it possible to update a value from a child and send it through the parent to another child?\u00a0 It is!</p> <p></p> <p>Let's dive into the code and see if we can do this and then I'll explain once we're done.</p> <pre><code>\n-------------------\nChild2\n-------------------\nimport React from \"react\";\n\ninterface Child2Props {\n  title: string;\n}\n\nconst  Child2: React.FC&lt;Child2Props&gt; = (props) =&gt; {\n  return(\n    &lt;div className=\"child2\"&gt;\n      &lt;h2&gt;{props.title}&lt;/h2&gt;\n    &lt;/div&gt;\n  )\n}\n\nexport default Child2;\n\n</code></pre> <p>First off let's look at Child2, there are no changes needed.\u00a0 So above you see Child2 in it's entirety.</p> <p>Next we'll dive into the Parent, a few changes will be needed.</p> <pre><code>\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Child1 from './Child1';\nimport Child2 from \"./Child2\";\n\nexport default function Parent() {\n  const [title, setTitle] = useState('Parent!')\n  const [child2Title, setChild2] = useState('Child2')\n\n  function updateTitle(newTitle: string){\n    setTitle(newTitle)\n  }\n  function setChild2Title(child2Title: string) {\n    setChild2(child2Title)\n  }\n  return (\n    &lt;div className=\"parent_container\"&gt;\n      &lt;h1&gt;{title}&lt;/h1&gt;\n      &lt;div className=\"child_container\"&gt;\n        &lt;Child2 \n          title={child2Title}\n        /&gt;\n        &lt;Child1 \n          updateChild2Title={setChild2Title}\n          updateParentTitle={updateTitle}\n        /&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n</code></pre> <p>On the Parent we are now using a useState hook for title and setTitle.\u00a0 We are using the title variable in our h1 for the main title of the Parent.\u00a0 We have created a two functions - updateTitle to handle calling setTitle with the new value that will be received from Child1 and setChild2Title to update the value received from Child1 to the new child2Title by calling setChild2.</p> <p>We also added in the Child1 element in our React Fragment, Child1 has two props, updateChild2Title which is set to equal the function setChild2Title and updateParentTitle which is set to equal the function updateTitle.\u00a0 This is interesting and a bit more complicated but still much simpler than a class based component.</p> <p>Now let's build out that Child1 component and see if we can actually update values on the Parent and Chid2.</p> <pre><code>\n\ninterface child1props {\n  updateParentTitle(title: string): any;\n  updateChild2Title(title: string): any;\n}\n\n\n</code></pre> <p>We'll start with just the interface.\u00a0 The interface has two values - updateParentTitle and updateChild2Title, these are the same values that are sent as props from the Parent component.\u00a0 They are also both functions that take a string named title and return any.</p> <pre><code>\nconst [titleVal, setTitleVal] = useState('')\nconst [childTitleVal, setChildTitle] = useState('')\n</code></pre> <p>Child1 will also use useState hooks to control the values for the parent title and child2 title, both values are set to emply strings when the component is initialized as these values will be connected to input elements.</p> <pre><code>\n&lt;div className=\"grid\"&gt;\n   &lt;label htmlFor=\"parent_title\"&gt;Parent Title Input&lt;/label&gt;\n   &lt;input type=\"text\" name=\"titles\" id=\"parent_title\" placeholder=\"Parent Title\" onChange={handleInput}/&gt;\n   &lt;button onClick={setParent}&gt;Update parent title&lt;/button&gt;\n&lt;/div&gt;\n\nfunction setParent(){\n    if (titleVal.length &gt; 1) {\n      props.updateParentTitle(titleVal)\n    } \n  }\n\nconst handleInput = (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n    setTitleVal(event.target.value)\n  }\n</code></pre> <p>This is a bit out of order but I want to show you the bits and pieces before the entire component is shown to make it easier to understand.\u00a0</p> <p>We setup the input and button to update the Parent title.\u00a0 The input has an onChange function that is connected to the handleInput function.\u00a0 The handleInput function takes the value from the input and calls the setTtitleVal function to update the titleVal.\u00a0 At this point the state has changed inside the Child1 component but has not been sent to the parent.\u00a0 To send to the parent there is an onClick on the button that calls the setParent function.\u00a0 The setParent function then calls props.updateParentTitle and sends the titleVal up to the parent.\u00a0 Remember, the updateParentTitle function was set as a prop on the Child1 component from the Parent component it then calls the updateTitle function on the Parent component which calls the setTitle useState hook.\u00a0 So at this point we can send a value from the Child1 component to the Parent component.\u00a0 But we still need to send from Child1 to Parent to Child2, so let's knock that functionality out.</p> <pre><code>\n&lt;div className=\"grid\"&gt;\n     &lt;label htmlFor=\"child2_title\"&gt;Child2 Title Input&lt;/label&gt;\n     &lt;input type=\"text\" name=\"titles\" id=\"child2_title\" placeholder=\"Child2 Title\" onChange={handleChild2Input}/&gt;\n    &lt;button onClick={setChild2}&gt;Update Child2 title&lt;/button&gt;\n&lt;/div&gt;\n\nfunction setChild2(){\n    if (childTitleVal.length &gt; 1){\n      props.updateChild2Title(childTitleVal)\n    }\n  }\n\nconst handleChild2Input = (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n    setChildTitle(event.target.value)\n  }\n</code></pre> <p>The good news is you already know how to do this.\u00a0 We are using the same pattern for sending the updated title for Child2.\u00a0 We create an input and button.\u00a0 The input has an onChange listener that passes the value of the intput to the setChildTittle function.\u00a0 Then the button has an onClick function that calls the setChild2 function which calls props.updateChild2Title.\u00a0 updateChild2Title was set as a prop on Child1 from the Parent component, which then calls the function setChild2Title.\u00a0 setChild2Title calls the useState hook setChild2 which updates the child2Title value and pushes that state value down to Child2.</p> <p>Below is Child1 in it's entirety.\u00a0 Take a few minutes to read through it as it's more complicated looking than the other components but once you understand how the small bits and pieces work then it's very digestible.</p> <pre><code>\nimport React, { useState } from \"react\";\n\ninterface child1props {\n  updateParentTitle(title: string): any;\n  updateChild2Title(title: string): any;\n}\n\nconst Child1: React.FC&lt;child1props&gt; = (props) =&gt; {\n  const [titleVal, setTitleVal] = useState('')\n  const [childTitleVal, setChildTitle] = useState('')\n\n  function setParent(){\n    if (titleVal.length &gt; 1) {\n      props.updateParentTitle(titleVal)\n    } \n  }\n\n  function setChild2(){\n    if (childTitleVal.length &gt; 1){\n      props.updateChild2Title(childTitleVal)\n    }\n  }\n\n  const handleInput = (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n    setTitleVal(event.target.value)\n  }\n\n  const handleChild2Input = (event: React.ChangeEvent&lt;HTMLInputElement&gt;) =&gt; {\n    setChildTitle(event.target.value)\n  }\n\n\n  return(\n    &lt;div&gt;\n      &lt;h2&gt;I'm Child1.&lt;/h2&gt;\n      &lt;div className=\"child1_container\"&gt;\n        &lt;div className=\"grid\"&gt;\n          &lt;label htmlFor=\"parent_title\"&gt;Parent Title Input&lt;/label&gt;\n          &lt;input type=\"text\" name=\"titles\" id=\"parent_title\" placeholder=\"Parent Title\" onChange={handleInput}/&gt;\n          &lt;button onClick={setParent}&gt;Update parent title&lt;/button&gt;\n        &lt;/div&gt;\n\n        &lt;div className=\"grid\"&gt;\n          &lt;label htmlFor=\"child2_title\"&gt;Child2 Title Input&lt;/label&gt;\n          &lt;input type=\"text\" name=\"titles\" id=\"child2_title\" placeholder=\"Child2 Title\" onChange={handleChild2Input}/&gt;\n          &lt;button onClick={setChild2}&gt;Update Child2 title&lt;/button&gt;\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n  )\n}\n\nexport default Child1;\n</code></pre>"},{"location":"blogs/React%20-%20Communicate%20between%20Parent%20and%20Child%20Functional%20Components/#summary","title":"Summary","text":"<p>Building React functional components that communicate from parent to child, child to parent, or child to child is relatively simple.\u00a0 The key to communication is done through sending functions as props.\u00a0 I hope this article was helpful, if so please share!</p> <p>Here is the repo for the code:</p> <p>https://github.com/marty331/react_parent_child</p>"},{"location":"blogs/Setting_up_NAS/","title":"Setting up NAS with Auto Backups on the RaspberryPi","text":"Setting Up NAS with Auto Backups on the Raspberry Pi <p>Edit \u2013 Logmein killed Pirvoxy, so this part of the article no longer works.</p> <p>Alright here\u2019s the follow up to my last post, Share WiFi to Wired Connection with Ubuntu.\u00a0</p> <p>So I set up the rPi with rdesktop, gedit, ntfs-3g, Samba, Hamachi, Privoxy and rsync to build my NAS and VPN. I have two external hard drives (2 TB and 500 GP) plugged in to a powered USB hub. I also have the powered USB hub powering the rPi. I\u2019ll reference the links I used as I go along, this wasn\u2019t hard to do.\u00a0</p> <p>I\u2019ll say it right now, if I can figure it out, anyone can.\u00a0</p> <p>First off if you haven\u2019t put Rasbian on your rPi, go do it and then come back\u2026.you\u2019re back already? Great, let\u2019s get started.\u00a0</p> <p>I don\u2019t like having to plug in a monitor, keyboard and mouse every time I want to access my rPi, so go ahead and do it the first time for the setup. Now that you have your peripherals all set up, let\u2019s install rdesktop so we don\u2019t have to do this again.\u00a0</p> <p>Open the terminal and then:\u00a0</p> <p>sudo apt-get install rdesktop\u00a0</p> <p>then get the IP address and write it down:\u00a0</p> <p>ifconfig eth0\u00a0</p> <p>Great. Now you can keep working on it as you have it set up or you can access it from another computer. IF you\u2019re on linux, go to your terminal and enter:\u00a0</p> <p>rdesktop ipaddress from above -g 90% (the -g 90% tells rdesktop to launch at 90% of the size of your screen. If you want something larger or smaller, suit yourself.) Sign in as your user id and password for your rPi.\u00a0</p> <p>Since I\u2019m not a big nano fan, I like to use gedit, let\u2019s install it now:\u00a0</p> <p>sudo apt-get install gedit\u00a0</p> <p>Now I initially followed this guide to set up Samba, http://elinux.org/R-Pi_NAS. We\u2019ll walk through the relevant parts. Let\u2019s install Samba:\u00a0</p> <p>sudo apt-get install samba samba-common-bin\u00a0</p> <p>If you\u2019re prompted to continue then say yes. Copy the the samba config file, in case we mess it up.\u00a0</p> <p>sudo cp /etc/samba/smb.conf /etc/samba/smb.conf.old\u00a0</p> <p>On the link above we\u2019re told to use nano to update our config file, as I said, I don\u2019t like it. The great thing about Linux is, if you don\u2019t like something, you don\u2019t have to use it. So we won\u2019t use it\u2026much.\u00a0</p> <p>Let\u2019s work on that config file:\u00a0</p> <p>sudo gedit /etc/samba/smb.conf\u00a0</p> <p>Search for security (ctrl + F and type security, then press enter) and you\u2019ll find the following:\u00a0</p> <p># security = user\u00a0</p> <p>Go ahead and remove the #, so we just have:\u00a0</p> <p>security = user\u00a0</p> <p>Now let\u2019s search for homes and change:\u00a0</p> <p>read only = yestoread only = no\u00a0</p> <p>Now save and close the file. Run the following command to restart Samba:\u00a0</p> <p>sudo /etc/init.d/samba restart\u00a0</p> <p>You\u2019ll see the following:\u00a0</p> <p>Stopping Samba daemons: nmdb smdbStarting Samba daemons: nmdb smdb\u00a0</p> <p>Samba comes configured with your user id defined, assuming it\u2019s pi we will now allow pi to be a Samba user.\u00a0</p> <p>sudo smbpasswd -a pi\u00a0</p> <p>You\u2019ll need to enter the password twice and then pi will be setup as the samba user id. If you would like to add an additional user(not required), then do the following:\u00a0</p> <p>sudo useradd marty -m -G userssudo smbpasswd marty\u00a0</p> <p>You\u2019ll be asked to enter the password for marty twice now.\u00a0</p> <p>Now let\u2019s make a shared folder to house our main storage (this will be for user pi, not for marty):\u00a0</p> <p>sudo mkdir /home/pi/shared\u00a0</p> <p>We also need to make a folder to house our backups:\u00a0</p> <p>sudo mkdir /home/pi/backup\u00a0</p> <p>Once more we need to edit the Samba configuration file, this time we are telling it about the shared folder we just created. So let\u2019s go do that:\u00a0</p> <p>sudo gedit /etc/samba/smb.conf\u00a0</p> <p>Scroll down to the end of the file and add the following:\u00a0</p> <p>[public]comment = Public Storagepath = /home/pi/sharedvalid users = @usersforce group = userscreate mask = 0660directory mask = 0771read only = no\u00a0</p> <p>Now save and close the file. Run the following command to restart Samba:\u00a0</p> <p>sudo /etc/init.d/samba restart\u00a0</p> <p>You\u2019ll see the following:\u00a0</p> <p>Stopping Samba daemons: nmdb smdbStarting Samba daemons: nmdb smdb\u00a0</p> <p>Now we are getting ready to start mapping our drives, so let\u2019s make sure we have support for NTFS-formatted disks.\u00a0</p> <p>sudo apt-get install ntfs-3g\u00a0</p> <p>Great, good job!\u00a0</p> <p>Let\u2019s go find our hard drives that we have mounted so we can get them setup to do their jobs. Run the following command to determine where they are currently located in our file system:\u00a0</p> <p>sudo fdisk \u2013 l\u00a0</p> <p>You\u2019ll see something like this:\u00a0</p> <p></p> <p><p> </p></p> <p>Now let\u2019s look at the results:/dev/mcblk0 \u2013 This is the SD Card that Rasbian is running on./dev/sda \u2013 This is the 2 TB hard drive that I am using for my main storage./dev/sdb \u2013 This is the 500 GB hard drive that I am going to use for backing up my family pictures and business documents.\u00a0</p> <p>Let\u2019s prepare to mount the harddrives by their UUID so they can be unplugged and plugged back in to the Raspberry Pi and will automatically mount to the correct file location. (Thank to Colin for this suggestion.)\u00a0</p> <p>In terminal execute:sudo blkidYou will see results similar to the below:\u00a0</p> <p>/dev/sda1: UUID=\u201d4369e650-ce1b-4ea5-8e24-809e275a0314\u2033 TYPE=\u201dext4\u2033/dev/sda2: UUID=\u201d1Ugipa-CKBF-qUpA-xJtp-q49N-fb6q-0Gikql\u201d TYPE=\u201dLVM2_member\u201d\u00a0</p> <p>We will need to capture the values that are in quotes beside UUID=\u201dxxxx\u201d.\u00a0</p> <p>The next step is to mount the hard drives to the folders we created earlier. Before we do this we need to make sure that they are not currently mounted. We are going to do this the easy way, open the file explorer as root:\u00a0</p> <p>sudo pcmanfm\u00a0</p> <p>and you will probably see the two hard drives mounted, simply client the unmount button beside each one. then close the file manager. Now let\u2019s mount the hard drives to their permanent location:\u00a0</p> <p>sudo mount /dev/sda1 /home/pi/sharedsudo mount /dev/sdb1 /home/pi/backup\u00a0</p> <p>Great job, now we have access from our home folder to both of these drives. But we need to make this happen automatically on boot, easy:\u00a0</p> <p>sudo gedit /etc/fstab\u00a0</p> <p>Now in the fstab file add the following two lines below the line that starts with /dev/mcblk0p2\u00a0</p> <p>Here is where we will use the UUID for each drive:\u00a0</p> <p>UUID=4369e650-ce1b-4ea5-8e24-809e275a0314 /home/pi/shared auto noatime 0 0UUID=1Ugipa-CKBF-qUpA-xJtp-q49N-fb6q-0Gikql /home/pi/backup auto noatime 0 0\u00a0</p> <p>Make sure you tab where you see the spaces above. Now save and close the file. We are set now, the drives will auto-mount to our home folders when we reboot.\u00a0</p> <p>Now it\u2019s time to get started with our backups, we need the software first:\u00a0</p> <p>sudo apt-get install rsync(that was hard huh!)\u00a0</p> <p>Well we\u2019ve reached the point where we have to use nano. It\u2019s not that hard, but it\u2019s definitely different than using a text editor. You will need to use your arrow keys to move up and down and then to save the file you\u2019ll need to press \u2018Ctrl + X\u2019 and then you\u2019ll be prompted to accept by pressing \u2018y\u2019. We are now going to configure our backups. I used the guide found onHow to Geek, as my inspiration for this, but I\u2019ve modified a few things to work better for me. I want to give them credit for the idea though. If you read their article they instruct you to setup your backup to run nightly, however I thought that was bit much, so I decided to educate myself and figure out how to modify this. I found this link, which explains how crontab works. Basically crontab takes this entry to determine when it will execute the command that follows:\u00a0</p> <p># Minute Hour Day of Month Month Day of Week Command# (0-59) (0-23) (1-31) (1-12 or Jan-Dec) (0-6 or Sun-Sat)0 2 12 * 0,6 rsync\u00a0</p> <p>I wanted to have my backups running at alternating times and only a couple of times a week, so let\u2019s go ahead and configure that:\u00a0</p> <p>crontab -e\u00a0</p> <p>Now you are in nano, navigate down to the bottom of the list and enter the following:0 2 * * 0,3 rsync -av \u2013delete /home/pi/shares/Pictures /home/pi/backup0 2 * * 1,5 rsync -av \u2013delete /home/pi/shares/busdocs /home/pi/backup\u00a0</p> <p>Now save the file, \u2018Ctrl + X\u2019 and then confirm \u2018y\u2019. So let me explain what we just set up, I\u2019ll go through the first line:0 \u2013 0 minutes2 \u2013 2 hours (2 AM)* \u2013 Any day of the month.* \u2013 Any month.0,3 \u2013 Run this on Sunday and Wenesday. (0 \u2013 Sunday, 1 \u2013 Monday, 2 \u2013 Tuesday, etc)rsync \u2013 Command to be ran.-av \u2013 archive and verbose\u2013 -delete \u2013 (MAKE sure there are TWO dashes \u2013 -, there should not be a space between these.) This parameter tells rsync to delete any file on the to folder that is not on the from folder, so if you remove a file in your main storage it will be removed in you backup./home/pi/shares/Pictures \u2013 This is the from folder./home/pi/backup \u2013 This is the to folder.\u00a0</p> <p>This last step is optional but recommended. Let\u2019s go ahead and run rsync for two reasons, to verify that it can successfully back up your data and to get the biggest backup done.\u00a0</p> <p>rsync -av \u2013delete /home/pi/shares/Pictures /home/pi/backup/Pictures\u00a0</p> <p>Depending on how much data you are backing up, this could take a while. When I first ran it I backed up around 40 GB of pictures and it took about 2 1/2 to 3 hours. So go get some coffee and relax.\u00a0</p> <p>So your backup is set and ready to run! You did it! And it wasn\u2019t even that hard!\u00a0</p> <p>There may be a better way to set this up, but this what worked for me, I hope you\u2019ve enjoyed getting your rPi setup as a NAS with auto backups!\u00a0</p> <p>One final piece, setup Hamachi so you can access your files remotely (yes you can already do it if you have SSH installed (which you should.)) Go to logmein.com and create a free account and set up your network. You can install this on Linux, Mac and windoze.\u00a0</p> <p>sudo apt-get update\u00a0</p> <p>sudo apt-get install \u2013fix-missing lsb lsb-core (this will take a bit)\u00a0</p> <p>sudo dpkg -1 \u2013force-architecture \u2013force-depends logmein-hamachi_2.1.0.86-1_armel.deb( the above line is dash dash force dash architecture and then dash dash force dash depends)\u00a0</p> <p>Now set up hamachi on the rPi:\u00a0</p> <p>sudo hamachi loginsudo hamachi attach [INSERT LOGMEIN.COM EMAIL HERE]sudo hamachi set-nick [INSERT A NICKNAME FOR YOUR RASPBERRY PI]\u00a0</p> <p>Now back on your computer on logmein.com, go to your networks and grant the Pi permissions to join your network and write down the network ID (a 9-digit number) for that network.\u00a0</p> <p>Back on the rPi:sudo hamachi do-join [THE NETWORK ID YOU WROTE DOWN]\u00a0</p> <p>Now start SSH so you can reach the rPi remotely:sudo /etc/init.d/ssh start\u00a0</p> <p>You should test out the set up now by SSH\u2019ing into the rPi at the virtual IP on the logmein.com site, it will be something like 25.xx.xx.xx:ssh pi@25.xx.xx.xx\u00a0</p> <p>Now you can access your rPi remotely (outside of your network.)\u00a0</p> <p>You can also remote desktop into the pi at the new virtual IP address:rdesktop 25.xx.xx.xx -g 70%\u00a0</p> <p>Here are the links that pulled knowledge from for all of this.:\u00a0</p> <p>http://www.howtogeek.com/139433/how-to-turn-a-raspberry-pi-into-a-low-power-network-storage-device/ </p> <p>http://linux.about.com/library/cmd/blcmdl1_rsync.htm </p> <p>http://www.pantz.org/software/cron/croninfo.html </p> <p>http://elinux.org/R-Pi_NAS </p> <p>http://lifehacker.com/5978098/turn-a-raspberry-pi-into-a-personal-vpn-for-secure-browsing-anywhere-you-go</p>"},{"location":"blogs/Share_WiFi_to_shared_connection/","title":"Share Wifi to Wired Connection with Ubuntu","text":"Share WiFi to Wired Connection with Ubuntu <p>So I bought my second Raspberry Pi and it was delivered last week. \u00a0I have barely been able to contain myself waiting to set it up. \u00a0However work is crazy right now and I worked till Midnight (started at 7 AM) two nights last week and it was son\u2019s 4th birthday and my wife and I are trying to get our home in order to list for sale. \u00a0So yeah, things are BUSY! \u00a0Anyway, back to the story\u2026</p> <p>I had to travel to Oklahoma City for work this week and I brought my new rPi with me and an SD Card. \u00a0I\u2019m in the hotel after work and\u00a0decide\u00a0it\u2019s time to get to work on the new project, but I didn\u2019t have any peripherals. \u00a0I made a quick run to Wal-Mart, grabbed a $10 keyboard and a $5 HDMI cable and I was in business\u2026sort of.</p> <p>I wrote Rasbian to the SD card and connected the rPi to the hotel TV via the HDMI cable, used an Android charger for power, my wireless mouse and my new keyboard. \u00a0I booted up the rPi and installed Rasbian. \u00a0So far so good, but I really didn\u2019t want to quit there. \u00a0I knew there had to be a way to get internet to my new rPi. \u00a0I called the front desk and they told me it was 2013 and there are no wired connections in hotels anymore (my how times have changed.)</p> <p>I started looking around the Ubuntu forums and came across a link that I thought had a good shot at giving me data, figured I had nothing to lose and gave it a shot.</p> <p>It turned out to be a piece of cake! \u00a0So I had wireless on my laptop, connected to the hotel WiFi. \u00a0I had to go the Network &gt; Edit Connections &gt; Wired &gt; Wired Connection1 \u2013 Edit &gt; IPv4 Settings \u2013 change Method to: Shared to other computers. \u00a0Save. \u00a0Reboot the laptop\u2026.and BOOM! \u00a0Data for the rPi!</p> <p></p> <p>I\u2019m planning on using this rPi as a server for my family\u2019s pictures and videos and also will be using it as a VPN server for secure browsing when I\u2019m traveling.</p> <p>I\u2019ll write another post on the final setup. \u00a0Till then, if you\u2019re stuck in a hotel with your rPi and need data, it\u2019s easy to get!</p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/","title":"Streamlit Class Based App","text":"<p>![header](../assets/images/streamlit/header.jpg) Streamlit Class Based App =========================</p> <p>Streamlit is an app that allows a Python devloper to turn their Python code into a shareable web app.\u00a0 It works great and it's very easy to get started.\u00a0 May data scientist use Jupyter notebooks and Steamlist is similar in a way but creates an actual web application that can be published.</p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/#streamlit-nuances","title":"Streamlit Nuances","text":"<p>One of the first issues I found with Streamlit was anytime a user has any interaction with a widget (button, slider, textbox, etc), then the entire application is ran again.\u00a0 I hope that the foks at Streamlit come up with a solution to this or maybe an option to turn this off so every widget is not recreated, but I digress.</p> <p>Another issue is state management.\u00a0 Streamlit has tackled state managment as you'll see later on, but their documentation could be improved with better examples.\u00a0\u00a0 The examples they have are really well written but there are just not many of them and they are basic.</p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/#streamlit-apps-without-state","title":"Streamlit Apps Without State","text":"<p>As I mentioned previously, the code in your streamlit app is ran on every touch of a widget.\u00a0 So that means if you change a value but don't have state stored then you have lost your value and the inital value is reset.\u00a0 Let's take a look at Streamlit's example of an app that does not retain state.\u00a0 Here we will simply click a button titled 'Increment' that should +1 to the current value of count....only it never makes it past 1.</p> <pre><code>\nimport streamlit as st\n\nst.title('Counter Example')\ncount = 0\n\nincrement = st.button('Increment')\nif increment:\n    count += 1\n\nst.write('Count = ', count)\n</code></pre> <p></p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/#streamlit-apps-with-state","title":"Streamlit Apps With State","text":"<p>The team at streamlit recognized this shortcoming and came up with a solution to the state problem.\u00a0 There were other solutions before it that were developed by developers outside of the project also.\u00a0 Streamlit's solution is to offer up session_state and it works really well.\u00a0 I'm currently using it in production apps.\u00a0</p> <p>Here is the way Streamlit explains how to initialize state in an app:</p> <pre><code>\n# Check if 'key' already exists in session_state\n# If not, then initialize it\nif 'my_key' not in st.session_state:\n    st.session_state['my_key'] = 'value'\n\n# Session State also supports the attribute based syntax\nif 'my_key' not in st.session_state:\n    st.session_state.my_key = 'value'\n</code></pre> <p>So session_state works similarly to JSON but not exatly like JSON.\u00a0 First you search to see if a key is present in the session_state and if not then create the initial value.\u00a0 Looking back on my attempt to figure out how to implement class based Streamlit apps I wish I had clung to that nugget as it proved to be essential.\u00a0</p> <p>To access a value in session_state you will simply call it as below:</p> <pre><code>\nst.session_state.my_key\n</code></pre> <p>However if you attempt to access a key that has not been initialized you will get the following type of exception:</p> <p></p> <p>The moral of the story is, always initialze any varialbe you want to keep in session_state.\u00a0 We'll get to that really soon.</p> <p>So let's see the the same type of app as before but one that retains state.\u00a0 We will implement an Increment and see how state is retained:</p> <pre><code>\nimport streamlit as st\n\nst.title('Counter Example')\nif 'count' not in st.session_state:\n    st.session_state.count = 0\n\nincrement = st.button('Increment')\nif increment:\n    st.session_state.count += 1\n\nst.write('Count = ', st.session_state.count)\n</code></pre> <p>And then we can see this works:</p> <p></p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/#class-based-streamlit-app-broken-state","title":"Class Based Streamlit App - Broken State","text":"<p>So now we understand how to handle state in Streamlit but the code we've written so far is not class based and not object oriented.\u00a0 It is functional but it's not up to professional standards and not extensible.\u00a0 The reason I was even concerned with this is I have a client who needed a Streamlit app upgraded and it needed to retain state for multiple files and calculated values.\u00a0 It was written by a data scientist and the work was brilliant, but it just wasn't extensible.\u00a0 So I was tasked with correcting that, and I did.\u00a0</p> <p>Let's rewrite the app as a class based app and we will add in a Decrement button to go along with our Increment button.\u00a0 I will show you how I thought this should have been written in this iteration and you'll see that the state is now broken.\u00a0 Bummer.</p> <pre><code>\nimport streamlit as st\n\n\nclass Counter:\n    def __init__(self):\n        st.session_state.count = 0\n        st.session_state.title = \"Calculator\"\n\n    def add(self):\n        st.session_state.count += 1\n\n    def subtract(self):\n        st.session_state.count -= 1\n\n    def window(self):\n        st.button(\"Increment\", on_click=self.add)\n        st.button(\"Decrement\", on_click=self.subtract)\n        st.write(f'Count = {st.session_state.count}')\n\n\n\nif __name__ == '__main__':\n    ct = Counter()\n    ct.window()\n</code></pre> <p>Let's focus on the __init__ method.\u00a0 At first glance you may think nothing of this, it looks like any other __init__ method you've seen however the problem is that Streamlit has the nuances that I mentioned previously - it reruns every time you touch a widget and session_status is going to be reset because of this nuance.\u00a0</p> <p>Let's take a look at what happens in real life.\u00a0 As you see, state is not being retained at all, no matter how many times we click Increment or Drecrement the value of count is always zero.\u00a0 I don't know about the apps you've worked on, but to me this is less than ideal.\u00a0 So let's fix it once and for all.</p> <p></p>"},{"location":"blogs/Streamlit%20Class%20Based%20App/#class-based-streamlit-app-working-state","title":"Class Based Streamlit App - Working State","text":"<p>I really felt like kicking myself once I figured out my error, it was simple and the Streamlit docs literally told me what I needed to do.\u00a0 In ithe __init__ method you need to look to see if your key is in session_state.\u00a0 If it's not, then you add it with a default value.\u00a0 If it is, then you do nothing.\u00a0 Simple.\u00a0</p> <p>Here's the code:</p> <pre><code>\nimport streamlit as st\n\n\nclass Counter:\n    def __init__(self):\n        if 'count' not in st.session_state:\n            st.session_state.count = 0\n        if 'title' not in st.session_state:\n            st.session_state.title = \"Calculator\"\n        self.col1, self.col2 = st.columns(2)\n\n    def add(self):\n        st.session_state.count += 1\n\n    def subtract(self):\n        st.session_state.count -= 1\n\n    def tester(self):\n        if 'tester' not in st.session_state:\n            st.session_state.tester = \"Tester\"\n        else:\n            st.session_state.tester = \"Already tested\"\n        with self.col2:\n            st.write(f\"Hello from the {st.session_state.tester}!\")\n\n    def window(self):\n\n        with self.col1:\n            st.button(\"Increment\", on_click=self.add)\n            st.button(\"Subtract\", on_click=self.subtract)\n            st.write(f'Count = {st.session_state.count}')\n        with self.col2:\n            st.button('test me', on_click=self.tester)\n\n\n\nif __name__ == '__main__':\n    ct = Counter()\n    ct.window()\n</code></pre> <p>So now we look for the value in session_state, if it's there no action is taken, if it is not there then we sent an initial value.\u00a0 Streamlit handles the reloads and retains state for us.\u00a0 Also, in this iteration I've added in two columns and a new button to display a message for the user, just to prove that state is retained with different interactions.</p> <p></p> <p>And there you have it. Thanks for reading.\u00a0 Please feel free to reach out to me on Twitter: marty331</p> <p>Photo by Jack Gittoes from Pexels</p>"},{"location":"blogs/Turn_your_android_device_into_a_second_monitor/","title":"Turn your Android device into a second screen with Deskdock","text":"Turn Your Android Device into a Second Screen with DeskDock <p>Overview</p> <p>I purchased my Pixel C as soon as it was release in Dec 2015. \u00a0One of the things I wanted to do was to use it as a secondary monitor for my computer. \u00a0I tried several methods to get this to work but ultimately admitted defeat, it was a sad day.</p> <p>Well I\u2019m very happy to say that a pretty decent solution now exists, there is an app called\u00a0DeskDock\u00a0that enables your Android device to be controlled by your mouse and (in the paid version) keyboard. \u00a0Now I\u2019m a Linux user, so usually things like this come along and they may work with some fanagaling or work half-ass, but that\u2019s not the case with DeskDock. \u00a0It works perfectly on Linux and the documentation says that it works for Windows and Mac as well.</p> <p>Setup</p> <p>Setting up the app is very simple.</p> <p>First you download it (obviously) from the Play Store to your Android device.</p> <p>Next you move to your computer, if you already have Java JRE 1.7 or newer then you\u2019re good to go, else you\u2019ll need to get that installed.</p> <p>Enable USB debugging on your Android device, this means you\u2019ll need to enable Developer Options on your Android device. \u00a0 If you don\u2019t already have this done, go to Settings &gt; About Tablet/Phone &gt; Build Number \u00a0Tap Build Number 7 times and you are magically a developer (Congrats).</p> <p></p> <p> </p> <p>Connect your Android device to your computer and depending on which OS you are on you\u2019ll need to ensure that you have drivers, udev rules, etc setup \u2013</p> <p>If you are using Windows, you have to install USB drivers for your Android device now. These drivers are typically provided by the device manufacturer as a download. For some devices, Windows can automatically find, download and install the drivers when you connect your Android device for the first time. Please note there is a difference between MTP drivers (for file exchange) and ADB drivers (which this app needs). Many computers automatically install the MTP drivers, but not the ADB drivers. In order to find the appropriate ADB drivers for your device, please do an Internet research. This page is usually a good starting point. On Linux, you have to set up your system to recognize the Android device. Instructions can be found here (Start with the 3rd point).</p> <p>After you have all your drivers, udev rules, etc complete now you need to download the DeskDock server, you can do so here \u2013\u00a0DeskDockServer\u00a0 You\u2019ll want to download the version for your specific OS. \u00a0Once it is downloaded unzip the file.</p> <p>Now back on your Android device in the DeskDock app, click the Connect button, make sure your Android device is connected to your computer and then on your computer double-click the\u00a0DeskDockServer_1.0.5.jar (version at the time of this posting) file.</p> <p>You should be connected right away.</p> <p>All of these instructions are in the app itself and are easy to follow.</p> <p></p> <p> </p> <p>When the app connects to your computer it will switch to the Status tab and you should see the connected message like below.</p> <p></p> <p> </p> <p>Features</p> <p>The free version comes with only a couple of features \u2013 it allows you to use your mouse on the Android device and allows you to utilize multi-touch by holding the CTRL key and then moving the mouse on screen. \u00a0These both work great and I was happy to try to them out.</p> <p>The pro version ($5.49) enables your keyboard (this was worth it to me), \u00a0gives you the ability to turn off the screen, adjust the volume and adjust the brightness.</p> <p>Keyboard \u2013 Using your computer\u2019s keyboard works flawlessly, I truly couldn\u2019t be happier with this functionality. \u00a0I can type emails, notes, anything I want and it does not miss a keystroke.</p> <p>Turn off screen \u2013 This feature is enabled by holding the CTRL key and simply exiting the device, it works as advertised and turns off your screen.</p> <p>Volume \u2013 To adjust the volume on the device you simply hold the CTRL key (seeing a theme yet) and use your mouse\u2019s scroll wheel to turn the volume up or down.</p> <p>Brightness \u2013 To adjust the brightness on the device you hold the CTRL and ALT buttons and, again, use your mouse\u2019s scroll wheel to adjust the brightness up or down.</p> <p>Not documented is waking up the device, if you have turned off the screen and you want to use your device again, you just move your mouse back onto your device and wake it up! \u00a0If your screen has a passcode, pattern or pin lock you can use the mouse to enter that and unlock the screen.</p> <p> </p> <p>https://youtu.be/uG4vIl7W9H4 <p> </p></p> <p>Wrap up</p> <p>So is the Pro version worth the $5.49? \u00a0In my opinion I believe it\u2019s worth it. \u00a0I am using it and think that this will enhance how I use my Pixel C. \u00a0For instance, I can have it in split screen mode with my email in one half and hangouts in another, so in essence I\u2019m running three screens at a time. \u00a0I love it so far and plan to use it very often.</p>"},{"location":"blogs/Wagtail%20-%20How%20to%20add%20a%20List%20of%20Related%20Fields%20to%20a%20Page/","title":"Wagtail - How to add a List of Related Fields to a Page","text":"Wagtail - How to add a List of Related Fields to a Page <p> The Requirement</p> <p>I recently had a client who wanted the ability to display multiple\u00a0videos about their products and have them in a scrollable carousel.\u00a0 As I've learned over the years, a client's initial request is not actually what they want.\u00a0 So I dug a bit deeper and discoverened that they actually want the ability to show multiple videos and some written content telling the user what the video is about.\u00a0 After learning this I felt I had the fully story.\u00a0 I had previously created a product page in Wagtail that allowed for a single video element and other fields that described various attributes of the product.\u00a0</p>"},{"location":"blogs/Wagtail%20-%20How%20to%20add%20a%20List%20of%20Related%20Fields%20to%20a%20Page/#the-problem","title":"The Problem","text":"<p>Now I needed to modify this page to allow for multiple videos and descriptions for each product.\u00a0 This should be simple right?\u00a0 I (incorrectly) assumed I could add a list of objects to the page.\u00a0\u00a0Just create a list of fields?\u00a0 Hmm.\u00a0 I searched the Wagtail documents and the Django documents and was unable to find the elusive ListField.\u00a0 In fact, I don't believe one exists.\u00a0 (Feel free to comment if that is incorrect)\u00a0 I truly believe that is something can be imagined then it can be built, so I knew there must be a solution out there and I had to figure it out.</p>"},{"location":"blogs/Wagtail%20-%20How%20to%20add%20a%20List%20of%20Related%20Fields%20to%20a%20Page/#the-solution","title":"The Solution","text":"<p>After spending a bit of time trying to understand how this was going to be possible I came across StreamFields.\u00a0 Everything I was reading was pointing me back to StreamFields as the solution but I was having a really hard time finding any real information about how to implement StreamFields with a RichTextField and a URLField (or any set of multiple fields).\u00a0 Finally I came across the StructBlock.</p> <pre><code>\nStructural block types\nIn addition to the basic block types above, it is possible to define new \nblock types made up of sub-blocks: for example, a \u2018person\u2019 block consisting \nof sub-blocks for first name, surname and image, or a \u2018carousel\u2019 block \nconsisting of an unlimited number of image blocks. These structures can \nbe nested to any depth, making it possible to have a structure containing \na list, or a list of structures.\n</code></pre> <p>https://docs.wagtail.io/en/stable/topics/streamfield.html?highlight=StructBlock#structural-block-types</p> <p>The example (PersonBlock)\u00a0that is provided made this clear that I had found my way.\u00a0 This shows a class that contains multiple related fields, which is eactly what I was looking for to solve my client's problem.</p> <pre><code>\nclass PersonBlock(blocks.StructBlock):\n    first_name = blocks.CharBlock()\n    surname = blocks.CharBlock()\n    photo = ImageChooserBlock(required=False)\n    biography = blocks.RichTextBlock()\n\n    class Meta:\n        icon = 'user'\n</code></pre> <p>And then to use this on a Wagtail page the below example is shown.\u00a0 OK, that's not exactly what I was going for, but I believe it will get me there.\u00a0 The StreamField below shows many blocks within the StreamField, but I am looking to only add a single StructBlock.</p> <pre><code>\nbody = StreamField([\n    ('heading', blocks.CharBlock(form_classname=\"full title\")),\n    ('paragraph', blocks.RichTextBlock()),\n    ('image', ImageChooserBlock()),\n    ('person', PersonBlock()),\n])\n</code></pre>"},{"location":"blogs/Wagtail%20-%20How%20to%20add%20a%20List%20of%20Related%20Fields%20to%20a%20Page/#the-code","title":"The Code","text":"<p>So my actual solution was to create a StructBlock class that conatins a URLBlock and a RichTextBlock and then embed that into a StreamField on my page.\u00a0</p> <p>For the StructBlock class I created a new class called DescAndUrlBlock.\u00a0 First, in\u00a0this class I add a RichTextBlock called description, which I set required equal to True and added help text of 'Add your description'.\u00a0 Then I added the URLBlock called link, this is also set to requried equal True and has a help text of 'Add video URL'.\u00a0 Below this I add a meta class which contains the icon and a label.\u00a0 If you want to see all of the available icons in Wagtail, add 'wagtail.contrib.styleguide' to your settings.\u00a0 Then in your admin page you can navigate to Settings &gt; Styleguide and click on Icons to view all of the available choices.</p> <p>Below is the code -\u00a0</p> <pre><code>\nfrom wagtail.core import blocks\n\nclass DescAndUrlBlock(blocks.StructBlock):\n    \"\"\"Description and URL\"\"\"\n\n    description = blocks.RichTextBlock(required=True, help_text=\"Add your description\")\n    link = blocks.URLBlock(required=True, help_text=\"Add video URL\")\n\n    class Meta:\n        icon = \"snippet\"\n        label = \"Add a Video link and Description\"\n</code></pre> <p>Next I update my page, I imported StreamFieldPanel and StreamField from Wagtail, and imported the new DescAndUrlBlock that I had just created.\u00a0 In the page class I add the StreamField which takes in a list of tuples.\u00a0 Each tuple requires a desciption and a block (remember, I added a StrucBlock, which allows for more than one block).\u00a0 I also set null equal to False and blank equal to False.\u00a0 I created a meta class to give my page a name and plural name.\u00a0 Then I add my content element to the content_panels, here I use the StreamFieldPanel and pass in the content field.\u00a0 With that I have everything in place.</p> <pre><code>\nfrom wagtail.core.models import Page\nfrom wagtail.admin.edit_handlers import StreamFieldPanel\nfrom wagtail.core.fields import StreamField\n\nfrom .blocks import DescAndUrlBlock\n\nclass VideoPage(Page):\n    content = StreamField([\n        ('desc_and_url', DescAndUrlBlock())\n    ], null=False, blank=False)\n\n    class Meta:\n        verbose_name = \"Video Page\"\n        verbose_name_plural = \"Videos Pages\"\n\n    content_panels = Page.content_panels + [\n        StreamFieldPanel('content')\n    ]\n\n</code></pre>"},{"location":"blogs/Wagtail%20-%20How%20to%20add%20a%20List%20of%20Related%20Fields%20to%20a%20Page/#the-result","title":"The Result","text":"<p>Header\u00a0Photo by Jake Hills on Unsplash</p>"},{"location":"blogs/duo/","title":"Google's Duo is finally here, but was it worth the wait?","text":"Google\u2019s Duo is Finally Here, But Was it Worth the Wait? <p>The long awaited dedicated video chat app from Google arrived this past week. \u00a0I\u2019ve tested it out and will report my findings here. \u00a0Duo was announced, along with it\u2019s sister app Allo, at Google I/O 2016 and I was there. I remember thinking, \u2018Why doesn\u2019t Google just fix all the issues with the Hangouts app?\u2019. \u00a0I still don\u2019t have a clear answer on that question other than maybe there are so many issues that they just want to burn it to the ground. \u00a0But they aren\u2019t even doing that, Hangouts is reported to be hanging around for Enterprise users, so I guess we\u2019ll see.</p> <p>I travel a lot with my job and I have two young children, so I video chat with them and my wife every day when I\u2019m gone. \u00a0Video chat is a very important feature to me as it allows me to see the most important people in my life and I have high expectations.</p> <p>During the announcement at I/O, Google specifically said this app would deliver a magical experience every time it was used, OK that got me excited about having such a great video calling app. \u00a0Basically this will be FaceTime on Android, something that has been missing for six years now. \u00a0So let\u2019s dive in and see if Google delivered on this promise.</p> <p>App Setup</p> <p>The set up is very simple, you confirm your phone number, Duo is tied to your phone number but not your email or any other ID, then grant Duo access to your contacts, camera, microphone and SMS. Once that is complete Duo is ready to use. \u00a0Currently Duo is only available on phones, it will not work on tablets, maybe this will change but there is no guarantee of this. \u00a0If you compare to WhatsApp, you see the same app setup, to me this is disappointing. \u00a0I would really like to use Duo on multiple devices, not just my phone.</p> <p></p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p></p> <p></p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p> </p> <p>Interface</p> <p>The interface is dead simple, when you open the app you are greated with your own smiling face and you see a simple\u00a0Video call\u00a0button. Clicking the Video call button you will see your contacts at the top of the list that already have the Duo app installed and for anyone who does not have Duo installed you will see an \u2018Invite\u2019 link. Clicking the Invite link will allow you to open your SMS app of choice to SMS them a quick message with a link to install Duo on their device (Android or iOS). After making a call you will then see that contact\u2019s icon next to the Video call\u00a0button next time you open the Duo app.</p> <p></p> <p> </p> <p>Call Quality</p> <p>After all the hype and all the waiting I was expecting this app to be glorious. However, what I have found is the call quality has been very disappointing. I\u2019ve had issues with sound and delays. Sound quality has been very poor, this has been when I\u2019m on WiFi and the other person was on WiFi. One example \u00a0of this was on the same network and the other was talking with a friend in California while I\u2019m in Texas. Both of this instances I could barely hear the other person and the sound that I could hear had a bad echo. The other issue I\u2019ve experienced has been extreme delay of sound and video, this happened when I was talking with one of my best friends who lives in Manilla, again I\u2019m in Texas, was connected to my home WiFi. I\u2019m not certain of his connection but he was at home when we were talking, so I assume he was on WiFi as well. He had trouble hearing me and the video feed kept freezing for both of us (we chatted on Hangouts after). I\u2019m hoping that google comes out with a good update very soon to address these issues.</p> <p>Conclusion</p> <p>So after waiting for the past three months I was expecting magic, I personally know two people that were in the beta test for this app and have heard nothing but glowing reviews from them (along with a lot of bragging). \u00a0After the release this week I have felt totally let down. \u00a0The interface is great, I couldn\u2019t ask for it to be simpler but the sound issues and the delays in both video and sound have left me with a sour taste in my mouth.</p> <p>I hope that Google has an update coming out to fix these issues but I hoped that about Hangouts for the past three years and that never happened. \u00a0Will Duo be another app that gets replaced in a year or two or will Google come through? \u00a0Only time will tell but for now I will probably continue using Hangouts when I need to make a video call.</p> <p> </p> <p> </p> <p> </p> <p> </p>"}]}